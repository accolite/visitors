{"version":3,"sources":["/./$_lazy_route_resource lazy namespace object","/./src/app/app.component.html","/./src/app/components/login.component.html","/./src/app/components/ui-components/card/card.component.html","/./src/app/components/ui-components/data-table/data-table.component.html","/./src/app/components/ui-components/drop-down/drop-down.component.html","/./src/app/components/ui-components/snack-bar/snack-bar.component.html","/./src/app/modules/home/approved-request/approved-request.component.html","/./src/app/modules/home/home.component.html","/./src/app/modules/home/pending-request/pending-request.component.html","/./src/app/modules/home/pre-approved-request/pre-approved-request.component.html","/./src/app/modules/report/components/visit-summary/visit-summary.component.html","/./src/app/modules/report/components/visitor-profile/visitor-profile.component.html","/./src/app/modules/report/components/visitor/visitor.component.html","/./src/app/modules/report/report.component.html","/./src/app/modules/visitor-form/visitor-form.component.html","/./src/app/modules/visitor-form/visitor-home/visitor-home.component.html","/./src/app/modules/visitor-form/visitor-search-or-create/visitor-search-or-create.component.html","/./src/app/app-routing.module.ts","/./src/app/app.component.css","/./src/app/app.component.ts","/./src/app/app.module.ts","/./src/app/components/base/data-obtainer.component.ts","/./src/app/components/login.component.css","/./src/app/components/login.component.ts","/./src/app/components/ui-components/card/card.component.css","/./src/app/components/ui-components/card/card.component.ts","/./src/app/components/ui-components/data-table/data-table.component.css","/./src/app/components/ui-components/data-table/data-table.component.ts","/./src/app/components/ui-components/drop-down/drop-down.component.css","/./src/app/components/ui-components/drop-down/drop-down.component.ts","/./src/app/components/ui-components/snack-bar/snack-bar.component.css","/./src/app/components/ui-components/snack-bar/snack-bar.component.ts","/./src/app/helpers/array.util.ts","/./src/app/helpers/models/service-search-params-input.model.ts","/./src/app/helpers/models/visitors/visit-summary.model.ts","/./src/app/helpers/models/visitors/visitors.model.ts","/./src/app/helpers/static-data.ts","/./src/app/modules/home/approved-request/approved-request.component.css","/./src/app/modules/home/approved-request/approved-request.component.ts","/./src/app/modules/home/home.component.css","/./src/app/modules/home/home.component.ts","/./src/app/modules/home/home.module.ts","/./src/app/modules/home/pending-request/pending-request.component.css","/./src/app/modules/home/pending-request/pending-request.component.ts","/./src/app/modules/home/pre-approved-request/pre-approved-request.component.css","/./src/app/modules/home/pre-approved-request/pre-approved-request.component.ts","/./src/app/modules/material.module.ts","/./src/app/modules/report/components/visit-summary/visit-summary.component.css","/./src/app/modules/report/components/visit-summary/visit-summary.component.ts","/./src/app/modules/report/components/visitor-profile/visitor-profile.component.css","/./src/app/modules/report/components/visitor-profile/visitor-profile.component.ts","/./src/app/modules/report/components/visitor/visitor.component.css","/./src/app/modules/report/components/visitor/visitor.component.ts","/./src/app/modules/report/report.component.css","/./src/app/modules/report/report.component.ts","/./src/app/modules/report/report.module.ts","/./src/app/modules/visitor-form/visitor-form.component.css","/./src/app/modules/visitor-form/visitor-form.component.ts","/./src/app/modules/visitor-form/visitor-home/visitor-home.component.css","/./src/app/modules/visitor-form/visitor-home/visitor-home.component.ts","/./src/app/modules/visitor-form/visitor-search-or-create/visitor-search-or-create.component.css","/./src/app/modules/visitor-form/visitor-search-or-create/visitor-search-or-create.component.ts","/./src/app/modules/visitor-form/visitors.module.ts","/./src/app/services/auth.service.ts","/./src/app/services/base/rest.service.ts","/./src/app/services/visitor.service.ts","/./src/config/constants.ts","/./src/environments/environment.ts","/./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n  <mat-toolbar-row>\\r\\n    <button\\r\\n      type=\\\"button\\\"\\r\\n      aria-label=\\\"Toggle sidenav\\\"\\r\\n      mat-icon-button\\r\\n      (click)=\\\"drawer.toggle()\\\"\\r\\n    >\\r\\n      <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\r\\n    </button>\\r\\n    <span><img id=\\\"img\\\" src=\\\"../assets/images/accolite.jpg\\\"/></span>\\r\\n  </mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n<mat-sidenav-container class=\\\"example-container\\\">\\r\\n  <mat-sidenav #drawer mode=\\\"side\\\" opened role=\\\"navigation\\\">\\r\\n    <mat-nav-list class=\\\"matNavList\\\">\\r\\n      <a mat-list-item routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/visitor']\\\" routerLinkActive=\\\"active\\\" [queryParams]=\\\"{ loc: val }\\\">Visitor</a>\\r\\n      <a mat-list-item routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/report']\\\" routerLinkActive=\\\"active\\\" [queryParams]=\\\"{ loc: val }\\\">Report</a>\\r\\n    </mat-nav-list>\\r\\n    <drop-down class=\\\"locSelect\\\" [data]=\\\"location\\\" label=\\\"Location\\\" [selectedValue]=\\\"val\\\" (selectedValueChange)=\\\"selectedValue($event)\\\" ></drop-down>\\r\\n  </mat-sidenav>\\r\\n  <mat-sidenav-content>\\r\\n    <router-outlet></router-outlet>\\r\\n  </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\"","module.exports = \"<!-- <mat-toolbar color=\\\"primary\\\">\\r\\n  <mat-toolbar-row>\\r\\n    <button type=\\\"button\\\" aria-label=\\\"Toggle sidenav\\\" mat-icon-button (click)=\\\"drawer.toggle()\\\">\\r\\n      <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\r\\n    </button>\\r\\n    <span><img id=\\\"img\\\" src=\\\"../assets/images/accolite.jpg\\\"></span>\\r\\n  </mat-toolbar-row>\\r\\n</mat-toolbar> -->\\r\\n<mat-card class=\\\"example-card\\\">\\r\\n  <mat-card-header>\\r\\n    <mat-card-title>Login</mat-card-title>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>\\r\\n      <form [formGroup]=\\\"form\\\" class=\\\"normal-form \\\" (ngSubmit)=\\\"login()\\\">\\r\\n          <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\">\\r\\n        <tr>\\r\\n          <td>\\r\\n              <div class=\\\"form-group\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n                <span class=\\\"span\\\" matPrefix><mat-icon class=\\\"span-maticon\\\">person</mat-icon>&nbsp;</span>\\r\\n\\r\\n            <input matInput formControlName=\\\"userName\\\"  placeholder=\\\"Username\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.userName.errors }\\\">\\r\\n            <div *ngIf=\\\"submitted && f.userName.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                <div *ngIf=\\\"f.userName.errors.required\\\">UserName is required</div> \\r\\n            </div>\\r\\n            <!-- <mat-error>This field is mandatory.</mat-error>  -->\\r\\n          </mat-form-field>\\r\\n              </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n        <td>\\r\\n            <div class=\\\"form-group\\\">\\r\\n          <mat-form-field class=\\\"full-width\\\">\\r\\n            <span class=\\\"span\\\" matPrefix><mat-icon class=\\\"span-maticon\\\">lock</mat-icon>&nbsp;</span>\\r\\n\\r\\n          <input matInput formControlName=\\\"Password\\\" placeholder=\\\"Password\\\" type=\\\"Password\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.Password.errors }\\\">\\r\\n          <div *ngIf=\\\"submitted && f.Password.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n              <div *ngIf=\\\"f.Password.errors.required\\\">Password is required</div> \\r\\n          </div>\\r\\n          <!-- <mat-error>This field is mandatory.</mat-error> -->\\r\\n        </mat-form-field>\\r\\n      </div>  \\r\\n      </td>\\r\\n      </tr></table>\\r\\n    \\r\\n    <!-- <mat-spinner [style.display]=\\\"showSpinner ? 'block' : 'none'\\\"></mat-spinner> -->\\r\\n  \\r\\n  <mat-card-actions>\\r\\n      <div class=\\\"form-group\\\">\\r\\n    <button mat-raised-button color=\\\"primary\\\">Login</button>\\r\\n    </div>\\r\\n  </mat-card-actions>\\r\\n</form>\\r\\n</mat-card-content>\\r\\n</mat-card>\"","module.exports = \"<mat-card [class.fullscreen]=\\\"enableFullScreen\\\">\\r\\n  <mat-card-header *ngIf=\\\"cardTitle\\\">\\r\\n    <div class=\\\"title\\\">\\r\\n      <mat-card-title *ngIf=\\\"cardTitle\\\" class=\\\"card-title\\\">{{\\r\\n        cardTitle\\r\\n      }}</mat-card-title>\\r\\n      <mat-card-subtitle *ngIf=\\\"cardSubTitle\\\">{{\\r\\n        cardSubTitle\\r\\n      }}</mat-card-subtitle>\\r\\n    </div>\\r\\n    <div class=\\\"actions\\\">\\r\\n      <mat-icon\\r\\n        *ngIf=\\\"enableFullScreen\\\"\\r\\n        (click)=\\\"enableFullScreen = !enableFullScreen\\\"\\r\\n        class=\\\"icon action ng-star-inserted\\\"\\r\\n        title=\\\"Toggle full screen\\\"\\r\\n        >fullscreen</mat-icon\\r\\n      >\\r\\n      <mat-icon\\r\\n        *ngIf=\\\"!enableFullScreen\\\"\\r\\n        (click)=\\\"enableFullScreen = !enableFullScreen\\\"\\r\\n        class=\\\"icon action ng-star-inserted\\\"\\r\\n        title=\\\"Toggle full screen\\\"\\r\\n        >fullscreen_exit</mat-icon\\r\\n      >\\r\\n      <mat-icon\\r\\n        *ngIf=\\\"!expandCard\\\"\\r\\n        (click)=\\\"expandCard = !expandCard\\\"\\r\\n        class=\\\"icon action ng-star-inserted\\\"\\r\\n        title=\\\"Hide\\\"\\r\\n        >expand_less</mat-icon\\r\\n      >\\r\\n      <mat-icon\\r\\n        *ngIf=\\\"expandCard\\\"\\r\\n        (click)=\\\"expandCard = !expandCard\\\"\\r\\n        class=\\\"icon action ng-star-inserted\\\"\\r\\n        title=\\\"Show\\\"\\r\\n        >expand_more</mat-icon\\r\\n      >\\r\\n    </div>\\r\\n  </mat-card-header>\\r\\n\\r\\n  <mat-progress-bar mode=\\\"indeterminate\\\" *ngIf=\\\"loading\\\"></mat-progress-bar>\\r\\n\\r\\n  <mat-card-content class=\\\"mat-content\\\" *ngIf=\\\"expandCard\\\">\\r\\n    <!-- Add Css to get exact spinner -->\\r\\n    <!-- <mat-spinner *ngIf=\\\"loading\\\"></mat-spinner> -->\\r\\n    <ng-content></ng-content>\\r\\n  </mat-card-content>\\r\\n  <!-- This tag is for images  -->\\r\\n  <!-- <img mat-card-image>\\tCard image. Stretches the image to the container width -->\\r\\n\\r\\n  <!-- below tag is for actions -->\\r\\n  <!-- <mat-card-actions *ngIf=\\\"expandCard\\\" align=\\\"end\\\">\\r\\n    <button mat-button>A</button>\\r\\n    <button mat-button>B</button>\\r\\n  </mat-card-actions> -->\\r\\n  <!-- <mat-card-footer>\\tSection anchored to the bottom of the cardSimple card</mat-card-footer> -->\\r\\n</mat-card>\\r\\n\"","module.exports = \"<mat-form-field>\\r\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n</mat-form-field>\\r\\n\\r\\n<table mat-table matSort [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n  \\r\\n  <ng-container *ngFor=\\\"let key of displayedColumns;let i = index\\\" matColumnDef=\\\"{{key}}\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>{{tableHelpers?.length > 0 ? tableHelpers[i]?.title : key?.toUpperCase()}}</th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element[key]}} </td>\\r\\n  </ng-container>\\r\\n  \\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n\\r\\n</table>\\r\\n<mat-paginator [ngClass]=\\\"usePagination ? 'show':'hide'\\\" [pageSizeOptions]=\\\"paginationTypes\\\" showFirstLastButtons></mat-paginator>\\r\\n\"","module.exports = \"<mat-form-field>\\r\\n  <mat-label>{{label}}</mat-label>\\r\\n  <mat-select [(ngModel)]=\\\"selectedValue\\\" (ngModelChange)=\\\"emitChanges($event)\\\" name=\\\"dropDown\\\">\\r\\n    <mat-option *ngFor=\\\"let obj of data\\\" [value]=\\\"id ? obj[id] : obj\\\">\\r\\n      {{id ? obj[id] : obj}}\\r\\n    </mat-option>\\r\\n  </mat-select>\\r\\n</mat-form-field>\\r\\n\"","module.exports = \"<div class=\\\"snack-bar\\\">\\r\\n  <div class=\\\"message\\\">\\r\\n    <span class=\\\"{{data?.class}} message-text\\\"><mat-icon>{{data?.icon}}</mat-icon> {{data?.message}}</span>\\r\\n  </div>\\r\\n  <div class=\\\"dismiss\\\">\\r\\n    <button mat-icon-button (click)=\\\"snackBarRef.dismiss()\\\">\\r\\n      <mat-icon class=\\\"button-icon\\\">{{data?.action}}</mat-icon>\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n  \"","module.exports = \"<card cardTitle=\\\"Approved Request\\\" [loading]=\\\"loading\\\">\\r\\n  <mat-form-field>\\r\\n    <input\\r\\n      matInput\\r\\n      (keyup)=\\\"applyFilter($event.target.value)\\\"\\r\\n      placeholder=\\\"Filter\\\"\\r\\n    />\\r\\n  </mat-form-field>\\r\\n  <div class=\\\"mat-elevation-z8\\\">\\r\\n    <table mat-table matSort [dataSource]=\\\"dataSource\\\">\\r\\n      <ng-container matColumnDef=\\\"badgeNo\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Badge No</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{ element.badgeNo }}</td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"Name\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          {{ element.firstName }} {{ element.lastName }}\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"inTime\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>In Time</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          {{ element.inTime | date: \\\"short\\\" }}\\r\\n        </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"outTime\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Out Time</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          {{ element.outTime | date: \\\"short\\\" }}\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"actions\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Actions</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <mat-checkbox>Badge returned</mat-checkbox>\\r\\n          <button\\r\\n            mat-raised-button\\r\\n            class=\\\"md-small\\\"\\r\\n            color=\\\"secondary\\\"\\r\\n            type=\\\"button\\\"\\r\\n          >\\r\\n            Exit\\r\\n          </button>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"remarks\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Remarks</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <textarea matInput></textarea>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></tr>\\r\\n    </table>\\r\\n\\r\\n    <mat-paginator\\r\\n      [pageSizeOptions]=\\\"[5, 10, 15]\\\"\\r\\n      showFirstLastButtons\\r\\n    ></mat-paginator>\\r\\n  </div>\\r\\n</card>\\r\\n\"","module.exports = \"<app-approved-request></app-approved-request>\\r\\n<app-pending-request></app-pending-request>\\r\\n<app-pre-approved-request></app-pre-approved-request>\\r\\n\"","module.exports = \"<card cardTitle=\\\"Pending Request\\\" [loading]=\\\"loading\\\">\\r\\n  <mat-form-field>\\r\\n    <input\\r\\n      matInput\\r\\n      (keyup)=\\\"applyFilter($event.target.value)\\\"\\r\\n      placeholder=\\\"Filter\\\"\\r\\n    />\\r\\n  </mat-form-field>\\r\\n  <div class=\\\"mat-elevation-z8\\\">\\r\\n    <table mat-table matSort [dataSource]=\\\"dataSource\\\">\\r\\n      <ng-container matColumnDef=\\\"badgeNo\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Badge No</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{ element.badgeNo }}</td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"Name\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          {{ element.firstName }} {{ element.lastName }}\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"inTime\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>In Time</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          {{ element.inTime | date: \\\"short\\\" }}\\r\\n        </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"outTime\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Out Time</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          {{ element.outTime | date: \\\"short\\\" }}\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"actions\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Actions</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <button mat-raised-button color=\\\"secondary\\\" type=\\\"button\\\">\\r\\n            Approve\\r\\n          </button>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"remarks\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Remarks</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <textarea matInput></textarea>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></tr>\\r\\n    </table>\\r\\n\\r\\n    <mat-paginator\\r\\n      [pageSizeOptions]=\\\"[5, 10, 15]\\\"\\r\\n      showFirstLastButtons\\r\\n    ></mat-paginator>\\r\\n  </div>\\r\\n</card>\\r\\n\"","module.exports = \"<card cardTitle=\\\"Pre Approved Request\\\" [loading]=\\\"loading\\\">\\r\\n  <mat-form-field>\\r\\n    <input\\r\\n      matInput\\r\\n      (keyup)=\\\"applyFilter($event.target.value)\\\"\\r\\n      placeholder=\\\"Filter\\\"\\r\\n    />\\r\\n  </mat-form-field>\\r\\n  <div class=\\\"mat-elevation-z8\\\">\\r\\n    <table mat-table matSort [dataSource]=\\\"dataSource\\\">\\r\\n      <ng-container matColumnDef=\\\"badgeNo\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Badge No</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <button mat-raised-button color=\\\"secondary\\\" type=\\\"button\\\">\\r\\n            Assign Badge\\r\\n          </button>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"Name\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          {{ element.firstName }} {{ element.lastName }}\\r\\n        </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"contactPerson\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>\\r\\n          Contact Person\\r\\n        </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          {{ element.contactPerson }}\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"actions\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Action</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <button mat-raised-button color=\\\"secondary\\\" type=\\\"button\\\">\\r\\n            Cancel\\r\\n          </button>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"remarks\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Remarks</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <textarea matInput></textarea>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></tr>\\r\\n    </table>\\r\\n\\r\\n    <mat-paginator\\r\\n      [pageSizeOptions]=\\\"[5, 10, 15]\\\"\\r\\n      showFirstLastButtons\\r\\n    ></mat-paginator>\\r\\n  </div>\\r\\n</card>\\r\\n\"","module.exports = \"<table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n    <ng-container matColumnDef=\\\"badgeNo\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef class=\\\"width150\\\"> Badge # </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.badgeNo}} </td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"contactPerson\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef class=\\\"width150\\\"> Contact Person </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.contactPerson}} </td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"inTime\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef class=\\\"width150\\\"> In Time </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.inTime | date:'short'}} </td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"outTime\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef class=\\\"width150\\\"> Out Time </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.outTime | date:'short' }} </td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"officeLocation\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef class=\\\"width150\\\"> Office Location </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.officeLocation }} </td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"purpose\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef class=\\\"width150\\\"> Purpose </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.purpose}} </td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"scheduledTime\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef class=\\\"width150\\\"> Scheduled Time </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.scheduledTime }} </td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"status\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef class=\\\"width150\\\"> Status </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status}} </td>\\r\\n    </ng-container>\\r\\n    <ng-container matColumnDef=\\\"visitNumber\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef class=\\\"width150\\\"> Visit # </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.visitNumber}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n</table>\"","module.exports = \"<div style=\\\"width: 50%;display: inline-block;margin-top:30px;\\\">\\r\\n    <h6>{{data.firstName}} {{data.lastName}}</h6>\\r\\n    <img mat-card-sm-image src=\\\"../assets/images/profile.jpg\\\" style=\\\"height: 300px; width: 300px;border: 1px solid;\\\"\\r\\n        alt=\\\"Photo of Yash\\\">\\r\\n</div>\\r\\n\\r\\n<div style=\\\"width:50%; display: inline-block;margin-top: 30px;position: absolute;\\\">\\r\\n    <div class=\\\"padding5\\\">\\r\\n        <label class=\\\"width150\\\"><b>First Name : </b></label>\\r\\n        {{data.firstName}}\\r\\n    </div>\\r\\n    <div class=\\\"padding5\\\">\\r\\n        <label class=\\\"width150\\\"><b>Last Name : </b></label>\\r\\n        {{data.lastName}}\\r\\n    </div>\\r\\n    <div class=\\\"padding5\\\">\\r\\n        <label class=\\\"width150\\\"><b>Visit Type : </b></label>\\r\\n        {{data.visitorType}}\\r\\n    </div>\\r\\n    <div class=\\\"padding5\\\">\\r\\n        <label class=\\\"width150\\\"><b>Email-Id : </b></label>\\r\\n        {{data.emailId}}\\r\\n    </div>\\r\\n    <div class=\\\"padding5\\\">\\r\\n        <label class=\\\"width150\\\"><b>Phone Number : </b></label>\\r\\n        {{data.phoneNumber}}\\r\\n    </div>\\r\\n    <div class=\\\"padding5\\\">\\r\\n        <label class=\\\"width150\\\"><b>Id : </b></label>\\r\\n        {{data.id}}\\r\\n    </div>\\r\\n    <div class=\\\"padding5\\\">\\r\\n        <label class=\\\"width150\\\"><b>Id Type : </b></label>\\r\\n        {{data.idType}}\\r\\n    </div>\\r\\n    <div class=\\\"padding5\\\">\\r\\n        <label class=\\\"width150\\\"><b>Govt. Id Number : </b></label>\\r\\n        {{data.idNumber}}\\r\\n    </div>\\r\\n</div>\"","module.exports = \"<div mat-dialog-content style=\\\"height:500px;\\\">\\r\\n    <mat-tab-group>\\r\\n        <mat-tab label=\\\"Profile\\\">\\r\\n            <app-visitor-profile [data]=\\\"dialogData\\\"></app-visitor-profile>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"Visit Summary\\\">\\r\\n            <app-visit-summary [data]=\\\"dialogData\\\"></app-visit-summary>\\r\\n        </mat-tab>\\r\\n    </mat-tab-group>\\r\\n</div>\\r\\n<div mat-dialog-actions align=\\\"end\\\">\\r\\n    <button mat-button mat-dialog-close (click)=\\\"onClickClose()\\\">Close</button>\\r\\n</div>\"","module.exports = \"<card cardTitle='Report'>\\r\\n<div class=\\\"mat-elevation-z8\\\">\\r\\n    <div class=\\\"report-loading-shade\\\"   *ngIf=\\\"isLoadingResults\\\">\\r\\n    <mat-spinner *ngIf=\\\"isLoadingResults\\\"></mat-spinner>\\r\\n</div>\\r\\n<table mat-table matSort [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n <!--- Note that these columns can be defined in any order.\\r\\n       The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n <!-- Position Column -->\\r\\n <ng-container matColumnDef=\\\"firstName\\\" >\\r\\n   <th  mat-header-cell *matHeaderCellDef mat-sort-header>First Name </th>\\r\\n   <td mat-cell *matCellDef=\\\"let element\\\"> {{element.firstName}} </td>\\r\\n </ng-container>\\r\\n <ng-container matColumnDef=\\\"lastName\\\">\\r\\n     <th mat-header-cell *matHeaderCellDef mat-sort-header> Last Name </th>\\r\\n     <td mat-cell *matCellDef=\\\"let element\\\"> {{element.lastName}} </td>\\r\\n   </ng-container>     \\r\\n   <!-- Name Column -->\\r\\n   <ng-container matColumnDef=\\\"phoneNumber\\\">\\r\\n     <th mat-header-cell *matHeaderCellDef mat-sort-header> Mobile </th>\\r\\n     <td mat-cell *matCellDef=\\\"let element\\\"> {{element.phoneNumber}} </td>\\r\\n   </ng-container>      \\r\\n   <!-- Weight Column -->\\r\\n   <ng-container matColumnDef=\\\"purpose\\\">\\r\\n     <th mat-header-cell *matHeaderCellDef mat-sort-header>Visit Purpose </th>\\r\\n     <td mat-cell *matCellDef=\\\"let element\\\"> {{element.visitSummary.purpose}} </td>\\r\\n   </ng-container>\\r\\n\\r\\n   <!-- Symbol Column -->\\r\\n   <ng-container matColumnDef=\\\"contactPerson\\\">\\r\\n     <th mat-header-cell *matHeaderCellDef mat-sort-header> Contact Person </th>\\r\\n     <td mat-cell *matCellDef=\\\"let element\\\"> {{element.visitSummary.contactPerson}} </td>\\r\\n   </ng-container>\\r\\n\\r\\n     <!-- Symbol Column -->\\r\\n   <ng-container matColumnDef=\\\"inTime\\\">\\r\\n     <th mat-header-cell *matHeaderCellDef mat-sort-header> In Time </th>\\r\\n     <td mat-cell *matCellDef=\\\"let element\\\"> {{element.visitSummary.inTime | date:'short'}} </td>\\r\\n   </ng-container>\\r\\n\\r\\n   <ng-container matColumnDef=\\\"idType\\\">\\r\\n       <th mat-header-cell *matHeaderCellDef mat-sort-header> Id Type </th>\\r\\n       <td mat-cell *matCellDef=\\\"let element\\\"> {{element.idType }} </td>\\r\\n   </ng-container>\\r\\n\\r\\n   <ng-container matColumnDef=\\\"idNumber\\\">\\r\\n       <th mat-header-cell *matHeaderCellDef mat-sort-header> Id Number </th>\\r\\n       <td mat-cell *matCellDef=\\\"let element\\\"> {{element.idNumber }} </td>\\r\\n   </ng-container>\\r\\n   <!-- <ng-container matColumnDef=\\\"actions\\\">\\r\\n       <th mat-header-cell *matHeaderCellDef mat-sort-header> Actions </th>\\r\\n       <td mat-cell *matCellDef=\\\"let element\\\"> </td>\\r\\n   </ng-container> -->\\r\\n   <!-- Search Columns-->\\r\\n   <ng-container matColumnDef=\\\"firstName-search\\\">\\r\\n     <th mat-header-cell *matHeaderCellDef>\\r\\n       <mat-form-field class=\\\"filter\\\" floatLabel=\\\"never\\\">\\r\\n           <mat-label>Search</mat-label>\\r\\n           <input matInput [formControl]=\\\"firstNameFilter\\\">\\r\\n         </mat-form-field>\\r\\n      </th>\\r\\n   </ng-container>\\r\\n   <ng-container matColumnDef=\\\"lastName-search\\\">\\r\\n     <th mat-header-cell *matHeaderCellDef>\\r\\n       <mat-form-field class=\\\"filter\\\" floatLabel=\\\"never\\\">\\r\\n           <mat-label>Search</mat-label>\\r\\n           <input matInput [formControl]=\\\"lastNameFilter\\\">\\r\\n         </mat-form-field>\\r\\n      </th>\\r\\n   </ng-container>\\r\\n<!--    <ng-container matColumnDef=\\\"phoneNumber-search\\\">\\r\\n     <th mat-header-cell *matHeaderCellDef>\\r\\n       <mat-form-field class=\\\"filter\\\" floatLabel=\\\"never\\\">\\r\\n           <mat-label>Search</mat-label>\\r\\n           <input matInput [formControl]=\\\"phoneNumberFilter\\\">\\r\\n         </mat-form-field>\\r\\n      </th>\\r\\n   </ng-container> -->\\r\\n   <ng-container matColumnDef=\\\"purpose-search\\\">\\r\\n     <th mat-header-cell *matHeaderCellDef>\\r\\n       <mat-form-field class=\\\"filter\\\" floatLabel=\\\"never\\\">\\r\\n           <mat-label>Search</mat-label>\\r\\n           <input matInput [formControl]=\\\"purposeFilter\\\">\\r\\n         </mat-form-field>\\r\\n      </th>\\r\\n   </ng-container>\\r\\n   <ng-container matColumnDef=\\\"contactPerson-search\\\">\\r\\n     <th mat-header-cell *matHeaderCellDef>\\r\\n       <mat-form-field class=\\\"filter\\\" floatLabel=\\\"never\\\">\\r\\n           <mat-label>Search</mat-label>\\r\\n           <input matInput [formControl]=\\\"contactPersonFilter\\\">\\r\\n         </mat-form-field>\\r\\n      </th>\\r\\n   </ng-container>\\r\\n   <ng-container matColumnDef=\\\"inTime-search\\\">\\r\\n     <th mat-header-cell *matHeaderCellDef>\\r\\n       <mat-form-field class=\\\"filter\\\" floatLabel=\\\"never\\\">\\r\\n           <mat-label>Search</mat-label>\\r\\n           <input matInput [formControl]=\\\"inTimeFilter\\\">\\r\\n         </mat-form-field>\\r\\n      </th>\\r\\n   </ng-container>\\r\\n   <ng-container matColumnDef=\\\"idType-search\\\">\\r\\n     <th mat-header-cell *matHeaderCellDef></th>\\r\\n   </ng-container>\\r\\n   <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\" class=\\\"first-header-row\\\"></tr>\\r\\n   <tr mat-header-row *matHeaderRowDef=\\\"displayedSearchBoxes\\\" ></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\" (click)=\\\"openDialog(row)\\\"></tr>\\r\\n</table>\\r\\n<mat-paginator [pageSizeOptions]=\\\"[2,5,10,15]\\\"  [length]=\\\"resultsLength\\\" [pageSize]=\\\"pageSize\\\"  showFirstLastButtons></mat-paginator>\\r\\n</div>\\r\\n</card>\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <form [formGroup]=\\\"form\\\" class=\\\"normal-form \\\">\\r\\n        <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"500\\\">\\r\\n          <div class=\\\"header table-div\\\">\\r\\n              <mat-form-field class=\\\"col-md-4 visitorInput\\\">\\r\\n                  <mat-select formControlName=\\\"visitorType\\\" placeholder=\\\"Visitor type\\\">\\r\\n                    <ng-container *ngFor=\\\"let type of visitorType\\\">\\r\\n                      <mat-option value=\\\"{{ type }}\\\">{{ type }}</mat-option>\\r\\n                    </ng-container>\\r\\n                  </mat-select>\\r\\n                </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div *ngIf=\\\" form.get('visitorType').value == 'Guest' || form.get('visitorType').value == ''; else second\\\">\\r\\n            <table width=\\\"700\\\" class=\\\"table-div\\\">\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input\\r\\n                      formControlName=\\\"firstName\\\"\\r\\n                      autocomplete=\\\"off\\\"\\r\\n                      matInput\\r\\n                      placeholder=\\\"Firstname\\\"\\r\\n                    />\\r\\n                    <mat-error>This field is mandatory.</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input\\r\\n                      autocomplete=\\\"off\\\"\\r\\n                      formControlName=\\\"lastName\\\"\\r\\n                      matInput\\r\\n                      placeholder=\\\"lastname\\\"\\r\\n                    />\\r\\n                    <mat-error>This field is mandatory.</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <mat-form-field class=\\\"full-width\\\">\\r\\n                    <mat-select formControlName=\\\"idType\\\" placeholder=\\\"ID type\\\">\\r\\n                      <mat-option>None</mat-option>\\r\\n                      <ng-container *ngFor=\\\"let type of ids\\\">\\r\\n                        <mat-option value=\\\"{{ type }}\\\">{{ type }}</mat-option>\\r\\n                      </ng-container>\\r\\n                    </mat-select>\\r\\n                  </mat-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input\\r\\n                      autocomplete=\\\"off\\\"\\r\\n                      formControlName=\\\"idNumber\\\"\\r\\n                      matInput\\r\\n                      placeholder=\\\"ID Number\\\"\\r\\n                    />\\r\\n                  </mat-form-field>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input\\r\\n                      autocomplete=\\\"off\\\"\\r\\n                      formControlName=\\\"emailId\\\"\\r\\n                      matInput\\r\\n                      placeholder=\\\"Email Id\\\"\\r\\n                    />\\r\\n                    <mat-error>Invalid email address.</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input\\r\\n                      autocomplete=\\\"off\\\"\\r\\n                      formControlName=\\\"phoneNumber\\\"\\r\\n                      matInput\\r\\n                      placeholder=\\\"Mobile*\\\"\\r\\n                    />\\r\\n                    <mat-error *ngIf=\\\"form.controls['phoneNumber'].errors?.required\\\"\\r\\n                      >This field is mandatory.</mat-error\\r\\n                    >\\r\\n                    <mat-error *ngIf=\\\"form.controls['phoneNumber'].errors?.pattern\\\">\\r\\n                      Invalid mobile number\\r\\n                    </mat-error>\\r\\n                    <!-- <mat-error *ngIf=\\\"service.form.controls['mobile'].errors?.maxlength\\\">Max 10 digit required</mat-error> -->\\r\\n                  </mat-form-field>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input\\r\\n                      autocomplete=\\\"off\\\"\\r\\n                      formControlName=\\\"comingFrom\\\"\\r\\n                      matInput\\r\\n                      placeholder=\\\"Coming From\\\"\\r\\n                    />\\r\\n                  </mat-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input\\r\\n                      autocomplete=\\\"off\\\"\\r\\n                      formControlName=\\\"contactPerson\\\"\\r\\n                      matInput\\r\\n                      placeholder=\\\"Contact person\\\"\\r\\n                    />\\r\\n                  </mat-form-field>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input\\r\\n                      autocomplete=\\\"off\\\"\\r\\n                      formControlName=\\\"inTime\\\"\\r\\n                      matInput\\r\\n                      placeholder=\\\"In time\\\"\\r\\n                      value=\\\"{{ now | date: 'medium' }}\\\"\\r\\n                    />\\r\\n                  </mat-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <mat-form-field class=\\\"full-width\\\">\\r\\n                    <mat-select formControlName=\\\"purpose\\\" placeholder=\\\"Purpose\\\">\\r\\n                      <mat-option>None</mat-option>\\r\\n                      <ng-container *ngFor=\\\"let pur of purposes\\\">\\r\\n                        <mat-option value=\\\"{{ pur.value }}\\\">{{\\r\\n                          pur.value\\r\\n                        }}</mat-option>\\r\\n                      </ng-container>\\r\\n                    </mat-select>\\r\\n                  </mat-form-field>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td colspan=\\\"2\\\" class=\\\"full-width\\\">\\r\\n                  <div class=\\\"button-row\\\" style=\\\"display:inline\\\">\\r\\n                    <button\\r\\n                      mat-raised-button\\r\\n                      color=\\\"primary\\\"\\r\\n                      type=\\\"submit\\\"\\r\\n                      (click)=\\\"onSubmit()\\\"\\r\\n                    >\\r\\n\\r\\n                      Submit\\r\\n                    </button>\\r\\n                  </div>\\r\\n                  <div style=\\\"display:inline ;margin-left: 3%\\\" >\\r\\n                    <button mat-raised-button color=\\\"warn\\\" (click)=\\\"onClear()\\\">\\r\\n                      Clear\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </table>\\r\\n\\r\\n            <!-- <mat-grid-tile>\\r\\n                <div class=\\\"controles-container secondGrid\\\">\\r\\n                  <mat-form-field>\\r\\n                    <input\\r\\n                      autocomplete=\\\"off\\\"\\r\\n                      formControlName=\\\"lastName\\\"\\r\\n                      matInput\\r\\n                      placeholder=\\\"lastname\\\"\\r\\n                    />\\r\\n                    <mat-error>This field is mandatory.</mat-error>\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field>\\r\\n                    <input\\r\\n                      autocomplete=\\\"off\\\"\\r\\n                      formControlName=\\\"idNumber\\\"\\r\\n                      matInput\\r\\n                      placeholder=\\\"ID Number\\\"\\r\\n                    />\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field>\\r\\n                    <input\\r\\n                      autocomplete=\\\"off\\\"\\r\\n                      formControlName=\\\"phoneNumber\\\"\\r\\n                      matInput\\r\\n                      placeholder=\\\"Mobile*\\\"\\r\\n                    />\\r\\n                    <mat-error\\r\\n                      *ngIf=\\\"form.controls['phoneNumber'].errors?.required\\\"\\r\\n                      >This field is mandatory.</mat-error\\r\\n                    >\\r\\n                    <mat-error\\r\\n                      *ngIf=\\\"form.controls['phoneNumber'].errors?.pattern\\\"\\r\\n                    >\\r\\n                      Invalid mobile number\\r\\n                    </mat-error>\\r\\n                    <mat-error *ngIf=\\\"service.form.controls['mobile'].errors?.maxlength\\\">Max 10 digit required</mat-error>\\r\\n                  </mat-form-field>\\r\\n\\r\\n                  <mat-form-field>\\r\\n                    <input\\r\\n                      autocomplete=\\\"off\\\"\\r\\n                      formControlName=\\\"contactPerson\\\"\\r\\n                      matInput\\r\\n                      placeholder=\\\"Contact person\\\"\\r\\n                    />\\r\\n                  </mat-form-field>\\r\\n                  <mat-form-field>\\r\\n                    <mat-select formControlName=\\\"purpose\\\" placeholder=\\\"Purpose\\\">\\r\\n                      <mat-option>None</mat-option>\\r\\n                      <ng-container *ngFor=\\\"let pur of purposes\\\">\\r\\n                        <mat-option value=\\\"{{ pur.value }}\\\">{{ pur.value }}</mat-option>\\r\\n                      </ng-container>\\r\\n                    </mat-select>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </mat-grid-tile> -->\\r\\n          </div>\\r\\n\\r\\n          <ng-template #second  >\\r\\n            <table  width=\\\"700\\\" class=\\\"table-div\\\">\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input\\r\\n                      formControlName=\\\"employeeId\\\"\\r\\n                      autocomplete=\\\"off\\\"\\r\\n                      matInput\\r\\n                      placeholder=\\\"Employee Id\\\"\\r\\n                    />\\r\\n                    <mat-error>This field is mandatory.</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input\\r\\n                      autocomplete=\\\"off\\\"\\r\\n                      formControlName=\\\"inTime\\\"\\r\\n                      matInput\\r\\n                      placeholder=\\\"In time\\\"\\r\\n                      value=\\\"{{ now | date: 'medium' }}\\\"\\r\\n                    />\\r\\n                  </mat-form-field>\\r\\n                </td>\\r\\n              </tr>\\r\\n\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input\\r\\n                      autocomplete=\\\"off\\\"\\r\\n                      formControlName=\\\"emailId\\\"\\r\\n                      matInput\\r\\n                      placeholder=\\\"Email Id\\\"\\r\\n                    />\\r\\n                    <mat-error>Invalid email address.</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input\\r\\n                      autocomplete=\\\"off\\\"\\r\\n                      formControlName=\\\"phoneNumber\\\"\\r\\n                      matInput\\r\\n                      placeholder=\\\"Mobile*\\\"\\r\\n                    />\\r\\n                    <mat-error *ngIf=\\\"form.controls['phoneNumber'].errors?.required\\\"\\r\\n                      >This field is mandatory.</mat-error\\r\\n                    >\\r\\n                    <mat-error *ngIf=\\\"form.controls['phoneNumber'].errors?.pattern\\\">\\r\\n                      Invalid mobile number\\r\\n                    </mat-error>\\r\\n                    <!-- <mat-error *ngIf=\\\"service.form.controls['mobile'].errors?.maxlength\\\">Max 10 digit required</mat-error> -->\\r\\n                  </mat-form-field>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td>\\r\\n                  <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input\\r\\n                      formControlName=\\\"firstName\\\"\\r\\n                      autocomplete=\\\"off\\\"\\r\\n                      matInput\\r\\n                      placeholder=\\\"Firstname\\\"\\r\\n                    />\\r\\n                    <mat-error>This field is mandatory.</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </td>\\r\\n                <td>\\r\\n                  <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input\\r\\n                      autocomplete=\\\"off\\\"\\r\\n                      formControlName=\\\"lastName\\\"\\r\\n                      matInput\\r\\n                      placeholder=\\\"lastname\\\"\\r\\n                    />\\r\\n                    <mat-error>This field is mandatory.</mat-error>\\r\\n                  </mat-form-field>\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                <td> <div class=\\\"button-row\\\">\\r\\n                    <button\\r\\n                      mat-raised-button\\r\\n                      color=\\\"primary\\\"\\r\\n                      type=\\\"submit\\\"\\r\\n                      (click)=\\\"onSubmitEmployeeData()\\\"\\r\\n                    >\\r\\n                      Submit\\r\\n                    </button>\\r\\n                  </div></td>\\r\\n              </tr>\\r\\n            </table>\\r\\n\\r\\n\\r\\n          </ng-template>\\r\\n        </mat-grid-list>\\r\\n      </form>\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \"<mat-tab-group>\\r\\n  <mat-tab label=\\\"Home\\\">\\r\\n    <app-home></app-home>\\r\\n  </mat-tab>\\r\\n\\r\\n  <mat-tab label=\\\"Create\\\">\\r\\n    <visitor-search-or-create></visitor-search-or-create>\\r\\n  </mat-tab>\\r\\n</mat-tab-group>\\r\\n\"","module.exports = \"<mat-vertical-stepper [linear]=\\\"true\\\" #stepper>\\r\\n    <mat-step>\\r\\n        <ng-template matStepLabel>Visitor search or create</ng-template>\\r\\n\\r\\n        <div class=\\\"example-container\\\">\\r\\n              \\r\\n          <mat-form-field class=\\\"set-width\\\">\\r\\n            <span class=\\\"span\\\" matPrefix><mat-icon class=\\\"span-maticon\\\">mail</mat-icon>&nbsp;</span>\\r\\n            <input matInput type=\\\"string\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"user.emailId\\\" (keyup)=\\\"searchValues($event.target.value,'email');\\\" class=\\\"example-right-align\\\">\\r\\n          </mat-form-field>\\r\\n\\r\\n          <!-- <h3 class=\\\"setMiddle\\\"> OR </h3>\\r\\n          \\r\\n          <mat-form-field class=\\\"set-width\\\">\\r\\n            <input matInput type=\\\"number\\\" placeholder=\\\"Mobile number\\\" [(ngModel)]=\\\"user.phoneNumber\\\" (keyup)=\\\"searchValues($event.target.value,'phoneNumber');\\\" #phoneNumber>\\r\\n            <span class=\\\"span\\\" matPrefix><mat-icon class=\\\"span-maticon\\\">smartphone</mat-icon>&nbsp;</span>\\r\\n          </mat-form-field> -->\\r\\n\\r\\n          <mat-list role=\\\"list\\\" *ngIf=\\\"data && data.idNumber\\\">\\r\\n            <mat-list-item class=\\\"list {{data?.visitSummary[data?.visitSummary?.length - 1]?.status?.toLowerCase()}}\\\" role=\\\"listitem\\\">\\r\\n                <span *ngIf=\\\"data && data.idNumber && data.visitSummary[0]?.status\\\">Status -</span>\\r\\n                 {{data?.visitSummary[data?.visitSummary?.length - 1]?.status}}\\r\\n            </mat-list-item>\\r\\n          </mat-list>\\r\\n        </div> \\r\\n        <div>\\r\\n            <button *ngIf=\\\"data\\\" mat-button matStepperNext>Next</button>\\r\\n            <button *ngIf=\\\"!data\\\" mat-button matStepperNext>Create</button>\\r\\n        </div>\\r\\n    </mat-step>\\r\\n\\r\\n    <mat-step [stepControl]=\\\"heroForm\\\">\\r\\n        <ng-template [ngIf]=\\\"data\\\" matStepLabel>{{ !data ? 'Create Visitor': 'View Visitor' }}</ng-template>\\r\\n        <form #heroForm=\\\"ngForm\\\">\\r\\n        <div class=\\\"flex-container-wrapper\\\">\\r\\n\\r\\n          <div class=\\\"flex-container\\\">\\r\\n              <mat-form-field>\\r\\n                <input [readonly]=\\\"data\\\" id=\\\"input\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"user.firstName\\\" matInput placeholder=\\\"First Name\\\" required>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field>\\r\\n                  <input [readonly]=\\\"data\\\" id=\\\"input\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"user.lastName\\\" matInput placeholder=\\\"Last Name\\\" required>\\r\\n              </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"flex-container\\\">\\r\\n              <mat-form-field>\\r\\n                <input [readonly]=\\\"data\\\" id=\\\"input\\\" name=\\\"purpose\\\" [(ngModel)]=\\\"user.visitSummary[0].purpose\\\"  matInput placeholder=\\\"Purpose\\\" required>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field> \\r\\n                  <input [readonly]=\\\"data\\\" id=\\\"input\\\"  name=\\\"comingFrom\\\" [(ngModel)]=\\\"user.visitSummary[0].comingFrom\\\" matInput placeholder=\\\"Coming From\\\" required>\\r\\n              </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"flex-container\\\">\\r\\n              <mat-form-field>\\r\\n                <mat-select [(ngModel)]=\\\"user.idType\\\" name=\\\"idType\\\" placeholder=\\\"Govt Id Type\\\" required>\\r\\n                  <mat-option value=\\\"{{id}}\\\" *ngFor=\\\"let id of idTypes\\\">{{id}}</mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n\\r\\n              <mat-form-field>\\r\\n                <input [readonly]=\\\"data\\\" id=\\\"input\\\"  name=\\\"idNumber\\\" [(ngModel)]=\\\"user.idNumber\\\" matInput placeholder=\\\"Id number\\\" required>\\r\\n              </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"flex-container\\\">\\r\\n              <mat-form-field>\\r\\n                  <input [readonly]=\\\"data\\\" id=\\\"input\\\"  name=\\\"badgeNo\\\" [(ngModel)]=\\\"user.visitSummary[0].badgeNo\\\" matInput placeholder=\\\"Temporary batch number\\\">\\r\\n              </mat-form-field>\\r\\n              <mat-form-field>\\r\\n                <input  [readonly]=\\\"data\\\" matInput type=\\\"number\\\" placeholder=\\\"Mobile number\\\" minlength=\\\"8\\\" maxlength=\\\"10\\\" [(ngModel)]=\\\"user.phoneNumber\\\" name=\\\"phoneNumber\\\" #phoneNumber required>\\r\\n              </mat-form-field>\\r\\n          </div>\\r\\n            <div class=\\\"flex-container\\\">\\r\\n              <mat-form-field>\\r\\n                <input [readonly]=\\\"data\\\" name=\\\"contactPerson\\\" [(ngModel)]=\\\"user.visitSummary[0].contactPerson\\\"\\r\\n                 matInput placeholder=\\\"Contact Person\\\" required>\\r\\n              </mat-form-field>\\r\\n              <mat-form-field>\\r\\n                <input [readonly]=\\\"data\\\" type=\\\"email\\\" pattern=\\\"[^@]+@[^\\\\.]+\\\\..+\\\" name=\\\"contactPersonEmailId\\\" [(ngModel)]=\\\"user.visitSummary[0].contactPersonEmailId\\\"\\r\\n                matInput placeholder=\\\"Contact Person Email Id\\\" required>\\r\\n              </mat-form-field>\\r\\n\\r\\n              <!-- <button mat-button>Add Contact Person</button> -->\\r\\n            </div>\\r\\n            <div class=\\\"flex-container\\\">\\r\\n              <mat-form-field>\\r\\n                <input [readonly]=\\\"data\\\" name=\\\"contactPersonPhone\\\" minlength=\\\"8\\\" maxlength=\\\"10\\\" [(ngModel)]=\\\"user.visitSummary[0].contactPersonPhone\\\"\\r\\n                matInput placeholder=\\\"Contact Person Phone Number\\\" required>\\r\\n              </mat-form-field>\\r\\n\\r\\n              <!-- <button mat-button>Add Contact Person</button> -->\\r\\n            </div>\\r\\n            \\r\\n          <!-- <div>\\r\\n            <button mat-button matStepperPrevious>Request Approval</button>\\r\\n            <button mat-button (click)=\\\"stepper.reset()\\\">Notify</button>\\r\\n          </div> -->\\r\\n          <div>\\r\\n            <button mat-button matStepperNext>Next</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>  \\r\\n    </mat-step>\\r\\n    <mat-step>\\r\\n      <ng-template matStepLabel>Approval</ng-template>\\r\\n      <h6 *ngIf=\\\"user && user?.firstName \\\">Name - {{user?.firstName +' '+ user?.lastName }} </h6>\\r\\n      <h6 *ngIf=\\\"user && user?.visitSummary[user?.visitSummary?.length - 1]?.purpose\\\">Purpose - {{user?.visitSummary[user?.visitSummary?.length - 1]?.purpose }} </h6>\\r\\n      <h6 *ngIf=\\\"user && user?.visitSummary[user?.visitSummary?.length - 1]?.contactPerson\\\">Contact Person Name - {{user?.visitSummary[user?.visitSummary?.length - 1]?.contactPerson }} </h6>\\r\\n      <h6 *ngIf=\\\"user && user?.visitSummary[user?.visitSummary?.length - 1]?.contactPersonEmailId\\\">Contact Person Email - {{user?.visitSummary[user?.visitSummary?.length - 1]?.contactPersonEmailId }} </h6>\\r\\n      <h6 *ngIf=\\\"user && user?.visitSummary[user?.visitSummary?.length - 1]?.contactPersonPhone\\\">Contact Person Contact - {{user?.visitSummary[user?.visitSummary?.length - 1]?.contactPersonPhone }} </h6>\\r\\n      <mat-list role=\\\"list\\\" *ngIf=\\\"data && data.idNumber\\\">\\r\\n        <mat-list-item class=\\\"list {{data?.visitSummary[data?.visitSummary?.length - 1]?.status ? data?.visitSummary[data?.visitSummary?.length - 1]?.status?.toLowerCase(): data?.idNumber ? 'pending': null}}\\\" role=\\\"listitem\\\">\\r\\n          <span *ngIf=\\\"data && data.idNumber\\\">Status -</span>\\r\\n               {{ data?.visitSummary[data?.visitSummary?.length - 1]?.status ? data?.visitSummary[data?.visitSummary?.length - 1]?.status : data?.idNumber ? 'PENDING' : null}}\\r\\n        </mat-list-item>\\r\\n      </mat-list>\\r\\n\\r\\n      <div>\\r\\n        <button mat-button matStepperPrevious>Back</button>\\r\\n        <button *ngIf=\\\"!data\\\" mat-button (click)=\\\"stepper.reset()\\\">Reset</button>\\r\\n        <button *ngIf=\\\"!data\\\" mat-button (click)=\\\"onSubmit()\\\">Finish</button>\\r\\n      </div>\\r\\n    </mat-step>\\r\\n  </mat-vertical-stepper>\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ReportComponent } from './modules/report/report.component';\r\nimport { VisitorComponent } from './modules/visitor-form/visitor-home/visitor-home.component';\r\nimport { loginComponent } from '../app/components/login.component'\r\n\r\nconst routes: Routes = [\r\n\r\n  { path: '', pathMatch: 'full', component: VisitorComponent },\r\n  // { path: 'login', pathMatch: 'full', component: loginComponent },\r\n  { path: 'visitor', pathMatch: 'full', component: VisitorComponent },\r\n  { path: 'report', pathMatch: 'full', component: ReportComponent },\r\n\r\n];\r\n\r\n@NgModule( {\r\n  imports: [ RouterModule.forRoot( routes ) ],\r\n  exports: [ RouterModule ]\r\n} )\r\nexport class AppRoutingModule { }\r\n","module.exports = \".example-container {\\r\\n  height: 50%;\\r\\n  margin: 10px;\\r\\n}\\r\\n.mat-sidenav-content{\\r\\nheight: 539px !important;\\r\\n}\\r\\n.mat-toolbar-row, .mat-toolbar-single-row {\\r\\nheight: 81px;\\r\\nmargin-top: 9px;\\r\\n}\\r\\n#img {\\r\\nwidth: 10em !important;\\r\\nmargin: 0 1rem;\\r\\n}\\r\\nmat-toolbar-row{\\r\\nmargin: 0 !important;\\r\\n}\\r\\n.mat-drawer.mat-drawer-side{\\r\\nz-index: 1 !important;\\r\\n}\\r\\n.matNavList{\\r\\n  height: 86%;\\r\\n}\\r\\n.locSelect{\\r\\n  margin-top: 5px !important;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtBQUNkO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFFQTtBQUNBLFlBQVk7QUFDWixlQUFlO0FBQ2Y7QUFFQTtBQUNBLHNCQUFzQjtBQUN0QixjQUFjO0FBQ2Q7QUFFQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUVBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBRUE7RUFDRSxXQUFXO0FBQ2I7QUFFQTtFQUNFLDBCQUEwQjtBQUM1QiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtY29udGFpbmVyIHtcclxuICBoZWlnaHQ6IDUwJTtcclxuICBtYXJnaW46IDEwcHg7XHJcbn1cclxuLm1hdC1zaWRlbmF2LWNvbnRlbnR7XHJcbmhlaWdodDogNTM5cHggIWltcG9ydGFudDtcclxufSAgXHJcblxyXG4ubWF0LXRvb2xiYXItcm93LCAubWF0LXRvb2xiYXItc2luZ2xlLXJvdyB7XHJcbmhlaWdodDogODFweDtcclxubWFyZ2luLXRvcDogOXB4O1xyXG59XHJcblxyXG4jaW1nIHtcclxud2lkdGg6IDEwZW0gIWltcG9ydGFudDtcclxubWFyZ2luOiAwIDFyZW07XHJcbn1cclxuXHJcbm1hdC10b29sYmFyLXJvd3tcclxubWFyZ2luOiAwICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tYXQtZHJhd2VyLm1hdC1kcmF3ZXItc2lkZXtcclxuei1pbmRleDogMSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4ubWF0TmF2TGlzdHtcclxuICBoZWlnaHQ6IDg2JTtcclxufVxyXG5cclxuLmxvY1NlbGVjdHtcclxuICBtYXJnaW4tdG9wOiA1cHggIWltcG9ydGFudDtcclxufVxyXG4iXX0= */\"","import { Component } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { accoliteLocation } from '../app/helpers/static-data'\r\nimport { BlockScrollStrategy } from '@angular/cdk/overlay';\r\nimport { Subject, BehaviorSubject } from 'rxjs';\r\nimport { AuthService } from './services/auth.service';\r\n\r\n@Component( {\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: [ './app.component.css' ]\r\n} )\r\n\r\n\r\nexport class AppComponent {\r\n  // activatedRoute: ActivatedRoute;\r\n  active: any;\r\n  constructor( private router: Router, private activatedRoute: ActivatedRoute\r\n    , private auth: AuthService ) {\r\n    if ( window.location.href.indexOf( '?loc' ) > -1 ) {\r\n      this.val = window.location.href.split( \"=\" )[ 1 ];\r\n    } else {\r\n      this.val = 'Bangalore';\r\n      this.selectedValue( this.val )\r\n    }\r\n\r\n  }\r\n  ngOnInit() {\r\n    // this.activatedRoute.paramMap.subscribe( params => {\r\n    //   console.log( params.get( 'login' ) )\r\n    // } )\r\n\r\n    this.auth.subject$.subscribe( ( data ) => this.active = data )\r\n    console.log( window.location.href );\r\n    if ( window.location.href.indexOf( 'login' ) > -1 ) {\r\n      console.log( \"login route\" )\r\n      this.auth.subject$.next( false );\r\n    }\r\n    else {\r\n      this.auth.subject$.next( true );\r\n    }\r\n    // console.log( this.router.url );\r\n    // if ( this.router.url.indexOf( 'login' ) > -1 ) {\r\n    //   this.active = 0;\r\n    //   console.log( \"Active \" + this.active )\r\n    // }\r\n  }\r\n  title = 'visitor-frontend';\r\n  location: any = accoliteLocation;\r\n  val: string = 'Bangalore';\r\n  // searchUrl: string = \"?\"\r\n  selectedValue( selectedval: string ) {\r\n    this.val = selectedval;\r\n    this.router.navigate(\r\n      [],\r\n      {\r\n        relativeTo: this.activatedRoute,\r\n        queryParams: { loc: this.val },\r\n        queryParamsHandling: 'merge',\r\n\r\n      } )\r\n  }\r\n}\r\n","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { MaterialModule } from \"./modules/material.module\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { ReportModule } from \"./modules/report/report.module\";\r\nimport { VisitorsModule } from \"./modules/visitor-form/visitors.module\";\r\nimport { HomeModule } from \"./modules/home/home.module\";\r\nimport { loginComponent } from './components/login.component';\r\n\r\n@NgModule( {\r\n  declarations: [ AppComponent, loginComponent ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    MaterialModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    VisitorsModule,\r\n    ReportModule,\r\n    HttpClientModule,\r\n    HomeModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [ AppComponent ]\r\n} )\r\nexport class AppModule { }\r\n\r\n","/**\r\n * @author M.Shashikant(shashikant.mittapelli@accoliteindia.com)\r\n *\r\n * Gives Flexiblity for all Component to reuse all methodwith loader and subscription functionality.\r\n * extend Component to enhance this feature.\r\n *\r\n */\r\nimport { Component, NgZone } from \"@angular/core\";\r\nimport { ServiceSearchParamsInputModel } from \"src/app/helpers/models/service-search-params-input.model\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"data-obtainer\",\r\n  template: \"\"\r\n})\r\nexport abstract class DataObtainer<T> {\r\n  loading: boolean = false;\r\n  data: T;\r\n  parameters: ServiceSearchParamsInputModel = new ServiceSearchParamsInputModel();\r\n  refreshOnInit: boolean = true;\r\n\r\n  constructor(private zones: NgZone) {}\r\n\r\n  ngOnInit() {\r\n    if (this.refreshOnInit) {\r\n      this.zones.run(() => this.refreshData());\r\n    }\r\n  }\r\n\r\n  refreshData() {\r\n    this.onBeforeUpdateData();\r\n    this.loading = true;\r\n    this.getDataObservable(this.parameters).subscribe(\r\n      data => {\r\n        this.data = JSON.parse(JSON.stringify(data));\r\n        this.onAfterUpdateData(data);\r\n        this.onNextStage(data);\r\n        this.loading = false;\r\n        console.log(this.data);\r\n      },\r\n      (error: any) => {\r\n        this.onErrorStage(error);\r\n      },\r\n      () => {\r\n        this.onCompleteStage();\r\n      }\r\n    );\r\n  }\r\n\r\n  protected abstract getDataObservable(\r\n    parameters: ServiceSearchParamsInputModel\r\n  ): Observable<any>;\r\n  protected onBeforeUpdateData() {}\r\n  protected onAfterUpdateData(data: any) {}\r\n  protected onCompleteStage() {}\r\n  protected onNextStage(data: any) {}\r\n  protected onErrorStage(error: any) {}\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from \"@angular/forms\";\r\n\r\n@Component( {\r\n  selector: 'app-login',\r\n  templateUrl: 'login.component.html',\r\n  styleUrls: [ 'login.component.css' ],\r\n} )\r\n\r\nexport class loginComponent {\r\n  form: FormGroup;\r\n  submitted = false;\r\n  constructor( private router: Router, private auth: AuthService, private formBuilder: FormBuilder ) {\r\n    this.auth.subject$.next( false )\r\n\r\n  }\r\n  // username: string;\r\n  // password: string;\r\n  ngOnInit() {\r\n\r\n\r\n    this.form = this.formBuilder.group( {\r\n      userName: [ \"\", Validators.required ],\r\n      Password: [ \"\", Validators.required ],\r\n\r\n    } );\r\n  }\r\n  // initializeFormGroup() {\r\n  //   this.form.setValue( {\r\n  //     userName: \"\",\r\n  //     Password: \"\",\r\n\r\n  //   } );\r\n  // }\r\n\r\n  // login(): void {\r\n  //   if ( this.username == 'admin' && this.password == 'admin' ) {\r\n  //     this.auth.subject$.next( true )\r\n  //     this.router.navigate( [ \"visitor\" ] );\r\n  //   } else {\r\n  //     this.auth.subject$.next( false )\r\n\r\n  //     alert( \"Invalid credentials\" );\r\n  //   }\r\n  // }\r\n\r\n  get f() { return this.form.controls; }\r\n\r\n  login() {\r\n    this.submitted = true;\r\n    if ( this.form.value.userName == 'admin' && this.form.value.Password == 'admin' ) {\r\n      console.log( this.form.value );\r\n      this.auth.subject$.next( true )\r\n      this.router.navigate( [ \"visitor\" ] );\r\n    } else {\r\n      this.auth.subject$.next( false )\r\n\r\n      //  alert( \"Invalid credentials\" );\r\n    }\r\n  }\r\n}","module.exports = \"mat-card {\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n.card-title {\\r\\n  font-weight: 700;\\r\\n}\\r\\n\\r\\n.fullscreen {\\r\\n  position: fixed;\\r\\n  top: 0;\\r\\n  bottom: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  z-index: 997;\\r\\n  overflow: auto;\\r\\n  margin-bottom: 0;\\r\\n}\\r\\n\\r\\nmat-card-header,\\r\\nmat-card-content {\\r\\n  padding: 1rem;\\r\\n}\\r\\n\\r\\nmat-card-header {\\r\\n  background-color: gainsboro;\\r\\n}\\r\\n\\r\\n.mat-card-title {\\r\\n  margin: 0 !important;\\r\\n}\\r\\n\\r\\nmat-card-header {\\r\\n  border-bottom: 1px solid #ddd;\\r\\n}\\r\\n\\r\\nmat-card-header div.title {\\r\\n  width: 70%;\\r\\n  float: left;\\r\\n}\\r\\n\\r\\nmat-card-header div.actions {\\r\\n  width: 30%;\\r\\n  display: inline-block;\\r\\n  text-align: right;\\r\\n}\\r\\n\\r\\ndiv.actions mat-icon:hover {\\r\\n  cursor: pointer;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy91aS1jb21wb25lbnRzL2NhcmQvY2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsZUFBZTtFQUNmLE1BQU07RUFDTixTQUFTO0VBQ1QsT0FBTztFQUNQLFFBQVE7RUFDUixZQUFZO0VBQ1osY0FBYztFQUNkLGdCQUFnQjtBQUNsQjs7QUFFQTs7RUFFRSxhQUFhO0FBQ2Y7O0FBQ0E7RUFDRSwyQkFBMkI7QUFDN0I7O0FBRUE7RUFDRSxvQkFBb0I7QUFDdEI7O0FBRUE7RUFDRSw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsV0FBVztBQUNiOztBQUVBO0VBQ0UsVUFBVTtFQUNWLHFCQUFxQjtFQUNyQixpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy91aS1jb21wb25lbnRzL2NhcmQvY2FyZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWNhcmQge1xyXG4gIHBhZGRpbmc6IDA7XHJcbn1cclxuXHJcbi5jYXJkLXRpdGxlIHtcclxuICBmb250LXdlaWdodDogNzAwO1xyXG59XHJcblxyXG4uZnVsbHNjcmVlbiB7XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG4gIHRvcDogMDtcclxuICBib3R0b206IDA7XHJcbiAgbGVmdDogMDtcclxuICByaWdodDogMDtcclxuICB6LWluZGV4OiA5OTc7XHJcbiAgb3ZlcmZsb3c6IGF1dG87XHJcbiAgbWFyZ2luLWJvdHRvbTogMDtcclxufVxyXG5cclxubWF0LWNhcmQtaGVhZGVyLFxyXG5tYXQtY2FyZC1jb250ZW50IHtcclxuICBwYWRkaW5nOiAxcmVtO1xyXG59XHJcbm1hdC1jYXJkLWhlYWRlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogZ2FpbnNib3JvO1xyXG59XHJcblxyXG4ubWF0LWNhcmQtdGl0bGUge1xyXG4gIG1hcmdpbjogMCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG5tYXQtY2FyZC1oZWFkZXIge1xyXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1xyXG59XHJcblxyXG5tYXQtY2FyZC1oZWFkZXIgZGl2LnRpdGxlIHtcclxuICB3aWR0aDogNzAlO1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG59XHJcblxyXG5tYXQtY2FyZC1oZWFkZXIgZGl2LmFjdGlvbnMge1xyXG4gIHdpZHRoOiAzMCU7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIHRleHQtYWxpZ246IHJpZ2h0O1xyXG59XHJcblxyXG5kaXYuYWN0aW9ucyBtYXQtaWNvbjpob3ZlciB7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59Il19 */\"","/**\r\n * @author M.Shashikant(shashikant.mittapelli@accoliteindia.com)\r\n * \r\n * Gives Flexibility to create card component\r\n */\r\n\r\n\r\nimport { Component, Input, TemplateRef } from '@angular/core';\r\n\r\n@Component( {\r\n  selector: 'card',\r\n  templateUrl: 'card.component.html',\r\n  styleUrls: [ 'card.component.css' ]\r\n} )\r\n\r\nexport class CardComponent {\r\n\r\n  @Input()\r\n  cardTitle: string;\r\n\r\n  @Input()\r\n  cardSubTitle: string;\r\n\r\n  @Input()\r\n  cardContent: TemplateRef<any>;\r\n\r\n  @Input()\r\n  loading: boolean = false;\r\n\r\n  enableFullScreen: boolean = false;\r\n\r\n  expandCard: boolean = true;\r\n\r\n}","module.exports = \".show{\\r\\n  display: inherit;\\r\\n}\\r\\n\\r\\n.hide{\\r\\n  display: none;\\r\\n}\\r\\n\\r\\nth.mat-sort-header-sorted {\\r\\n  color: black;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy91aS1jb21wb25lbnRzL2RhdGEtdGFibGUvZGF0YS10YWJsZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsWUFBWTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy91aS1jb21wb25lbnRzL2RhdGEtdGFibGUvZGF0YS10YWJsZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNob3d7XHJcbiAgZGlzcGxheTogaW5oZXJpdDtcclxufVxyXG5cclxuLmhpZGV7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxudGgubWF0LXNvcnQtaGVhZGVyLXNvcnRlZCB7XHJcbiAgY29sb3I6IGJsYWNrO1xyXG59XHJcbiJdfQ== */\"","import { Component, Input, SimpleChanges, ContentChildren, QueryList, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ArrayUtil } from 'src/app/helpers/array.util';\r\nimport { DataTableHelper } from 'src/app/helpers/data-table-helper.model';\r\nimport { MatPaginator } from '@angular/material';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\n/**\r\n * @author M.Shashikant(shashikant.mittapelli@accoliteindia.com)\r\n * Gives flexibility to reduce code and create Material design table \r\n * \r\n * \r\n * @property dataSource - to add Array of object \r\n * @property tableHelpers - flexibility to add title and give sorting access\r\n * \r\n */\r\n@Component( {\r\n  selector: 'data-table',\r\n  styleUrls: [ 'data-table.component.css' ],\r\n  templateUrl: 'data-table.component.html',\r\n} )\r\nexport class DataTableComponent {\r\n\r\n  @Input()\r\n  dataSource: MatTableDataSource<any>;\r\n\r\n  @Input()\r\n  tableHelpers: DataTableHelper[] = [];\r\n\r\n  @Input()\r\n  usePagination: boolean = false;\r\n\r\n  @Input()\r\n  paginationTypes: Array<number> = [ 5, 10, 20 ];\r\n\r\n  @ViewChild( MatPaginator, { static: true } )\r\n  paginator: MatPaginator;\r\n\r\n  @ViewChild( MatSort, { static: true } )\r\n  sort: MatSort;\r\n\r\n  displayedColumns: string[] = [];\r\n\r\n  @Input()\r\n  displayColumns: string[] = [];\r\n\r\n  ngOnChanges( changes: SimpleChanges ) {\r\n    if ( changes.dataSource ) {\r\n      this.dataSource = new MatTableDataSource( changes.dataSource.currentValue );\r\n      this.getDisplayedColumns();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataSource.paginator = this.usePagination ? this.paginator : this.dataSource.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getDisplayedColumns() {\r\n    //this.displayedColumns = this.displayColumns ? this.displayColumns : Object.keys( ArrayUtil.first( this.dataSource.data ) );\r\n    this.displayedColumns = Object.keys( ArrayUtil.first( this.dataSource.data ) );\r\n  }\r\n\r\n  applyFilter( filterValue: string ) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdWktY29tcG9uZW50cy9kcm9wLWRvd24vZHJvcC1kb3duLmNvbXBvbmVudC5jc3MifQ== */\"","/**\r\n * @author M.Shashikant(shashikant.mittapelli@accoliteindia.com)\r\n * \r\n * Gives Flexibility to create Material Dropdown component\r\n */\r\n\r\nimport { Component, Input, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\r\n\r\n@Component( {\r\n  selector: 'drop-down',\r\n  templateUrl: 'drop-down.component.html',\r\n  styleUrls: [ 'drop-down.component.css' ]\r\n} )\r\n\r\n\r\nexport class DropdownComponent {\r\n\r\n  @Input()\r\n  data: Array<any>;\r\n\r\n  @Input()\r\n  id: string;\r\n\r\n  @Input()\r\n  label: string;\r\n\r\n  @Input()\r\n  selectedValue: string;\r\n\r\n  @Output()\r\n  selectedValueChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  emitChanges() {\r\n    this.selectedValueChange.emit( this.selectedValue );\r\n  }\r\n\r\n}","module.exports = \".snack-bar{\\r\\n  display: -webkit-box;\\r\\n  display: flex;\\r\\n}\\r\\n\\r\\n.error{\\r\\n  color: lightcoral;\\r\\n}\\r\\n\\r\\ndiv.message{\\r\\n  -webkit-box-flex: 15;\\r\\n          flex: 15  \\r\\n}\\r\\n\\r\\ndiv.dismiss{\\r\\n  -webkit-box-flex: 1;\\r\\n          flex: 1;\\r\\n  height: 24px;\\r\\n}\\r\\n\\r\\nspan.message-text{\\r\\n  display: inline-block;\\r\\n}\\r\\n\\r\\nspan.message-text mat-icon{\\r\\n  vertical-align: middle;\\r\\n}\\r\\n\\r\\nbutton mat-icon.button-icon{\\r\\n  vertical-align: baseline !important;\\r\\n}\\r\\n\\r\\n.dismiss button{\\r\\n  width:24px;\\r\\n  height: 24px;\\r\\n}\\r\\n\\r\\n.mat-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*, \\r\\n .mat-flat-button .mat-button-wrapper>*, .mat-icon-button .mat-button-wrapper>*,\\r\\n  .mat-mini-fab .mat-button-wrapper>*, .mat-raised-button .mat-button-wrapper>*,\\r\\n   .mat-stroked-button .mat-button-wrapper>*{\\r\\n  vertical-align: baseline !important;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy91aS1jb21wb25lbnRzL3NuYWNrLWJhci9zbmFjay1iYXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG9CQUFhO0VBQWIsYUFBYTtBQUNmOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0Usb0JBQU87VUFBUDtBQUNGOztBQUVBO0VBQ0UsbUJBQU87VUFBUCxPQUFPO0VBQ1AsWUFBWTtBQUNkOztBQUVBO0VBQ0UscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsbUNBQW1DO0FBQ3JDOztBQUVBO0VBQ0UsVUFBVTtFQUNWLFlBQVk7QUFDZDs7QUFFQTs7OztFQUlFLG1DQUFtQztBQUNyQyIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdWktY29tcG9uZW50cy9zbmFjay1iYXIvc25hY2stYmFyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc25hY2stYmFye1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbn1cclxuXHJcbi5lcnJvcntcclxuICBjb2xvcjogbGlnaHRjb3JhbDtcclxufVxyXG5cclxuZGl2Lm1lc3NhZ2V7XHJcbiAgZmxleDogMTUgIFxyXG59XHJcblxyXG5kaXYuZGlzbWlzc3tcclxuICBmbGV4OiAxO1xyXG4gIGhlaWdodDogMjRweDtcclxufVxyXG5cclxuc3Bhbi5tZXNzYWdlLXRleHR7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG59XHJcblxyXG5zcGFuLm1lc3NhZ2UtdGV4dCBtYXQtaWNvbntcclxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG59XHJcblxyXG5idXR0b24gbWF0LWljb24uYnV0dG9uLWljb257XHJcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5kaXNtaXNzIGJ1dHRvbntcclxuICB3aWR0aDoyNHB4O1xyXG4gIGhlaWdodDogMjRweDtcclxufVxyXG5cclxuLm1hdC1idXR0b24gLm1hdC1idXR0b24td3JhcHBlcj4qLC5tYXQtZmFiIC5tYXQtYnV0dG9uLXdyYXBwZXI+KiwgXHJcbiAubWF0LWZsYXQtYnV0dG9uIC5tYXQtYnV0dG9uLXdyYXBwZXI+KiwgLm1hdC1pY29uLWJ1dHRvbiAubWF0LWJ1dHRvbi13cmFwcGVyPiosXHJcbiAgLm1hdC1taW5pLWZhYiAubWF0LWJ1dHRvbi13cmFwcGVyPiosIC5tYXQtcmFpc2VkLWJ1dHRvbiAubWF0LWJ1dHRvbi13cmFwcGVyPiosXHJcbiAgIC5tYXQtc3Ryb2tlZC1idXR0b24gLm1hdC1idXR0b24td3JhcHBlcj4qe1xyXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZSAhaW1wb3J0YW50O1xyXG59XHJcbiJdfQ== */\"","/**\r\n * @author M.Shashikant(shashikant.mittapelli@accoliteindia.com)\r\n * Gives flexibility to create custom ui for material snackbar\r\n */\r\n\r\nimport { Component, Inject } from '@angular/core';\r\nimport { MatSnackBarRef, MAT_SNACK_BAR_DATA } from '@angular/material';\r\n\r\n@Component( {\r\n  selector: 'snack-bar',\r\n  templateUrl: 'snack-bar.component.html',\r\n  styleUrls: [ 'snack-bar.component.css' ]\r\n} )\r\n\r\nexport class SnackbarComponent {\r\n  constructor( public snackBarRef: MatSnackBarRef<SnackbarComponent>, @Inject( MAT_SNACK_BAR_DATA ) public data: any ) { }\r\n}","export class ArrayUtil {\r\n\r\n  static isEmpty( arr: Array<any> ) {\r\n    return arr && arr.length <= 0;\r\n  }\r\n\r\n  static isNotEmpty( arr: Array<any> ) {\r\n    return arr && arr.length > 0;\r\n  }\r\n\r\n  static first( arr: Array<any> ) {\r\n    return ArrayUtil.isNotEmpty( arr ) ? arr[ 0 ] : [];\r\n  }\r\n\r\n\r\n}","/**\r\n *  @author M.Shashikant(shashikant.mittapelli@accoliteindia.com)\r\n *  Helper For Http params to be used by lower level components\r\n */\r\n\r\nexport class ServiceSearchParamsInputModel {\r\n  size: number = 10;\r\n  [ props: string ]: any;\r\n}","/**\r\n * @author M.Shashikant(shashikant.mittapelli@accoliteindia.com)\r\n * Visit Summary Model used in Visitor Model\r\n */\r\n\r\nexport class VisitSummaryModel {\r\n\r\n  badgeNo: string;\r\n  comingFrom: string\r\n  contactPerson: string;\r\n  contactPersonEmailId: string;\r\n  contactPersonPhone: string;\r\n  purpose: string;\r\n  officeLocation: string;\r\n  inTime: string;\r\n  outTime: string;\r\n  status: string;\r\n  scheduledTime: string;\r\n  remarks: string;\r\n\r\n  constructor( jsonObj?: {} ) {\r\n    Object.assign( this, jsonObj )\r\n  }\r\n\r\n}\r\n\r\n","/**\r\n * @author M.Shashikant(shashikant.mittapelli@accoliteindia.com)\r\n * Visitor Model \r\n */\r\n\r\nimport { VisitSummaryModel } from './visit-summary.model';\r\nimport { ArrayUtil } from '../../array.util';\r\n\r\nexport class VisitorModel {\r\n\r\n  firstName: string;\r\n  lastName: string;\r\n  phoneNumber: number;\r\n  emailId: string;\r\n  idType: number;\r\n  idNumber: number;\r\n  visitorType: string;\r\n  visitSummary: VisitSummaryModel[];\r\n\r\n  constructor( jsonObj?: {} ) {\r\n    Object.assign( this, jsonObj );\r\n    if ( ArrayUtil.isNotEmpty( this.visitSummary ) ) {\r\n      this.visitSummary = this.visitSummary.map( ( visitSummaryModel: VisitSummaryModel ) => new VisitSummaryModel( visitSummaryModel ) )\r\n    }\r\n  }\r\n}","// Add Accolite related static data \r\n\r\nexport const accoliteLocation = [ 'Bangalore', 'Hyderabad', 'Delhi' ];\r\n\r\nexport const idType = [ 'Voter Id', 'Aadhar Card', 'PAN Card', 'Driving License', 'Passport' ]\r\n\r\n// To Add success or error snackbar message\r\nexport const accoliteSnackbarMessages = {\r\n  rest: {\r\n    success: {\r\n      'create-visitors': \"Successfully created Visitor details\"\r\n    },\r\n    error: {\r\n      'create-visitors': \"Failed to create Visitor details\"\r\n    }\r\n  }\r\n}\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n  min-width: 2px;\\r\\n  max-height: 30px;\\r\\n\\r\\n  margin-left: 10px;\\r\\n  margin-top: 10px;\\r\\n\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9ob21lL2FwcHJvdmVkLXJlcXVlc3QvYXBwcm92ZWQtcmVxdWVzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsY0FBYztFQUNkLGdCQUFnQjs7RUFFaEIsaUJBQWlCO0VBQ2pCLGdCQUFnQjs7RUFFaEIsa0JBQWtCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9ob21lL2FwcHJvdmVkLXJlcXVlc3QvYXBwcm92ZWQtcmVxdWVzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG5idXR0b24ge1xyXG4gIG1pbi13aWR0aDogMnB4O1xyXG4gIG1heC1oZWlnaHQ6IDMwcHg7XHJcblxyXG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG4gIG1hcmdpbi10b3A6IDEwcHg7XHJcblxyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG4iXX0= */\"","import { Component, OnInit, ViewChild, Input, NgZone } from \"@angular/core\";\r\nimport { DataObtainer } from \"src/app/components/base/data-obtainer.component\";\r\nimport { MatPaginator, MatSort, MatTableDataSource } from \"@angular/material\";\r\nimport { VisitorService } from \"src/app/services/visitor.service\";\r\nimport { ServiceSearchParamsInputModel } from \"src/app/helpers/models/service-search-params-input.model\";\r\n\r\n@Component({\r\n  selector: \"app-approved-request\",\r\n  templateUrl: \"./approved-request.component.html\",\r\n  styleUrls: [\"./approved-request.component.css\"]\r\n})\r\nexport class ApprovedRequestComponent extends DataObtainer<any> {\r\n  visitors: any;\r\n  pagination = false;\r\n\r\n  @ViewChild(MatPaginator, { static: true })\r\n  paginator: MatPaginator;\r\n\r\n  @ViewChild(MatSort, { static: true })\r\n  sort: MatSort;\r\n\r\n  @Input()\r\n  dataSource: MatTableDataSource<any>;\r\n\r\n  displayedColumns = [\r\n    \"badgeNo\",\r\n    \"Name\",\r\n    \"inTime\",\r\n    \"outTime\",\r\n    \"actions\",\r\n    \"remarks\"\r\n  ];\r\n\r\n  constructor(private visitorService: VisitorService, private zone: NgZone) {\r\n    super(zone);\r\n  }\r\n\r\n  getDataObservable(params: ServiceSearchParamsInputModel) {\r\n    console.log(this.visitorService.fetchAllVisitors());\r\n    return this.visitorService.fetchAllVisitors();\r\n  }\r\n\r\n  onAfterUpdateData(data: any) {\r\n    this.visitors = data;\r\n    this.dataSource = new MatTableDataSource(this.visitors);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, ViewChild, Input, NgZone } from \"@angular/core\";\r\nimport { DataObtainer } from \"src/app/components/base/data-obtainer.component\";\r\nimport { VisitorService } from \"src/app/services/visitor.service\";\r\nimport { ServiceSearchParamsInputModel } from \"src/app/helpers/models/service-search-params-input.model\";\r\nimport { MatPaginator, MatTableDataSource, MatSort } from \"@angular/material\";\r\n@Component({\r\n  selector: \"app-home\",\r\n  templateUrl: \"./home.component.html\",\r\n  styleUrls: [\"./home.component.css\"]\r\n})\r\nexport class HomeComponent {\r\n  visitors: any;\r\n  pagination = false;\r\n\r\n  @ViewChild(MatPaginator, { static: true })\r\n  paginator: MatPaginator;\r\n\r\n  @ViewChild(MatSort, { static: true })\r\n  sort: MatSort;\r\n\r\n  @Input()\r\n  dataSource: MatTableDataSource<any>;\r\n\r\n  displayedColumns = [\"badgeNo\", \"Name\", \"inTime\", \"actions\", \"remarks\"];\r\n\r\n  constructor(private visitorService: VisitorService, private zone: NgZone) {}\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { MaterialModule } from \"../material.module\";\r\nimport { HomeComponent } from \"./home.component\";\r\nimport { ApprovedRequestComponent } from \"./approved-request/approved-request.component\";\r\nimport { PendingRequestComponent } from \"./pending-request/pending-request.component\";\r\nimport { PreApprovedRequestComponent } from \"./pre-approved-request/pre-approved-request.component\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\n@NgModule({\r\n  imports: [MaterialModule, CommonModule],\r\n  exports: [\r\n    HomeComponent,\r\n    ApprovedRequestComponent,\r\n    PendingRequestComponent,\r\n    PreApprovedRequestComponent\r\n  ],\r\n  declarations: [\r\n    HomeComponent,\r\n    ApprovedRequestComponent,\r\n    PendingRequestComponent,\r\n    PreApprovedRequestComponent\r\n  ]\r\n})\r\nexport class HomeModule {}\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9ob21lL3BlbmRpbmctcmVxdWVzdC9wZW5kaW5nLXJlcXVlc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvaG9tZS9wZW5kaW5nLXJlcXVlc3QvcGVuZGluZy1yZXF1ZXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuIl19 */\"","import { Component, OnInit, ViewChild, Input, NgZone } from \"@angular/core\";\r\nimport { DataObtainer } from \"src/app/components/base/data-obtainer.component\";\r\nimport { MatPaginator, MatSort, MatTableDataSource } from \"@angular/material\";\r\nimport { VisitorService } from \"src/app/services/visitor.service\";\r\nimport { ServiceSearchParamsInputModel } from \"src/app/helpers/models/service-search-params-input.model\";\r\n\r\n@Component({\r\n  selector: \"app-pending-request\",\r\n  templateUrl: \"./pending-request.component.html\",\r\n  styleUrls: [\"./pending-request.component.css\"]\r\n})\r\nexport class PendingRequestComponent extends DataObtainer<any> {\r\n  visitors: any;\r\n  pagination = false;\r\n\r\n  @ViewChild(MatPaginator, { static: true })\r\n  paginator: MatPaginator;\r\n\r\n  @ViewChild(MatSort, { static: true })\r\n  sort: MatSort;\r\n\r\n  @Input()\r\n  dataSource: MatTableDataSource<any>;\r\n\r\n  displayedColumns = [\r\n    \"badgeNo\",\r\n    \"Name\",\r\n    \"inTime\",\r\n    \"outTime\",\r\n    \"actions\",\r\n    \"remarks\"\r\n  ];\r\n\r\n  constructor(private visitorService: VisitorService, private zone: NgZone) {\r\n    super(zone);\r\n  }\r\n\r\n  getDataObservable(params: ServiceSearchParamsInputModel) {\r\n    console.log(this.visitorService.fetchAllVisitors());\r\n    return this.visitorService.fetchAllVisitors();\r\n  }\r\n\r\n  onAfterUpdateData(data: any) {\r\n    this.visitors = data;\r\n    this.dataSource = new MatTableDataSource(this.visitors);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9ob21lL3ByZS1hcHByb3ZlZC1yZXF1ZXN0L3ByZS1hcHByb3ZlZC1yZXF1ZXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2IiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2hvbWUvcHJlLWFwcHJvdmVkLXJlcXVlc3QvcHJlLWFwcHJvdmVkLXJlcXVlc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG4iXX0= */\"","import { Component, OnInit, ViewChild, Input, NgZone } from \"@angular/core\";\r\nimport { DataObtainer } from \"src/app/components/base/data-obtainer.component\";\r\nimport { MatPaginator, MatSort, MatTableDataSource } from \"@angular/material\";\r\nimport { VisitorService } from \"src/app/services/visitor.service\";\r\nimport { ServiceSearchParamsInputModel } from \"src/app/helpers/models/service-search-params-input.model\";\r\n\r\n@Component({\r\n  selector: \"app-pre-approved-request\",\r\n  templateUrl: \"./pre-approved-request.component.html\",\r\n  styleUrls: [\"./pre-approved-request.component.css\"]\r\n})\r\nexport class PreApprovedRequestComponent extends DataObtainer<any> {\r\n  visitors: any;\r\n  pagination = false;\r\n\r\n  @ViewChild(MatPaginator, { static: true })\r\n  paginator: MatPaginator;\r\n\r\n  @ViewChild(MatSort, { static: true })\r\n  sort: MatSort;\r\n\r\n  @Input()\r\n  dataSource: MatTableDataSource<any>;\r\n\r\n  displayedColumns = [\"badgeNo\", \"Name\", \"contactPerson\", \"actions\", \"remarks\"];\r\n\r\n  constructor(private visitorService: VisitorService, private zone: NgZone) {\r\n    super(zone);\r\n  }\r\n\r\n  getDataObservable(params: ServiceSearchParamsInputModel) {\r\n    console.log(this.visitorService.fetchAllVisitors());\r\n    return this.visitorService.fetchAllVisitors();\r\n  }\r\n\r\n  onAfterUpdateData(data: any) {\r\n    this.visitors = data;\r\n    this.dataSource = new MatTableDataSource(this.visitors);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n}\r\n","/**\r\n *\r\n * @author M.Shashikant(shashikant.mittapelli@accoliteindia.com)\r\n *\r\n * Gives the flexibility to add all Material declarations and imports inside this module\r\n */\r\n\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport {\r\n  MatButtonModule,\r\n  MatCheckboxModule,\r\n  MatTableModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatPaginatorModule,\r\n  MatSortModule,\r\n  MatCardModule,\r\n  MatIconModule,\r\n  MatToolbarModule,\r\n  MatListModule,\r\n  MatSidenavModule,\r\n  MatSelectModule,\r\n  MatGridListModule,\r\n  MatDatepickerModule,\r\n  MatSnackBarModule,\r\n  MatNativeDateModule,\r\n  MatProgressSpinnerModule,\r\n  MatProgressBarModule,\r\n  MatTabsModule,\r\n  MatStepperModule\r\n} from \"@angular/material\";\r\nimport { DataTableComponent } from \"../components/ui-components/data-table/data-table.component\";\r\nimport { CardComponent } from \"../components/ui-components/card/card.component\";\r\nimport { DropdownComponent } from \"../components/ui-components/drop-down/drop-down.component\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { SnackbarComponent } from \"../components/ui-components/snack-bar/snack-bar.component\";\r\n\r\nconst componentDeclarations = [\r\n  DataTableComponent,\r\n  CardComponent,\r\n  DropdownComponent,\r\n  SnackbarComponent\r\n];\r\nconst moduleDeclarations = [\r\n  CommonModule,\r\n  FormsModule,\r\n  MatButtonModule,\r\n  MatCheckboxModule,\r\n  MatTableModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatPaginatorModule,\r\n  MatSortModule,\r\n  MatIconModule,\r\n  MatCardModule,\r\n  MatToolbarModule,\r\n  MatListModule,\r\n  MatSidenavModule,\r\n  MatSelectModule,\r\n  MatSnackBarModule,\r\n  MatGridListModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MatProgressSpinnerModule,\r\n  MatProgressBarModule,\r\n  RouterModule,\r\n  MatTabsModule,\r\n  MatStepperModule\r\n];\r\n\r\n@NgModule( {\r\n  declarations: [ ...componentDeclarations ],\r\n  imports: [ ...moduleDeclarations ],\r\n  exports: [ ...moduleDeclarations, ...componentDeclarations ],\r\n  entryComponents: [ SnackbarComponent ]\r\n} )\r\nexport class MaterialModule { }\r\n","module.exports = \".width150 {\\r\\n    width: 150px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9yZXBvcnQvY29tcG9uZW50cy92aXNpdC1zdW1tYXJ5L3Zpc2l0LXN1bW1hcnkuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL3JlcG9ydC9jb21wb25lbnRzL3Zpc2l0LXN1bW1hcnkvdmlzaXQtc3VtbWFyeS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLndpZHRoMTUwIHtcclxuICAgIHdpZHRoOiAxNTBweDtcclxufSJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-visit-summary',\r\n  templateUrl: './visit-summary.component.html',\r\n  styleUrls: ['./visit-summary.component.css']\r\n})\r\nexport class VisitSummaryComponent implements OnInit {\r\n  @Input() data: any;\r\n\r\n  dataSource: MatTableDataSource<any>;\r\n\r\n  visitSummary = [];\r\n\r\n  displayedColumns = [\r\n    'badgeNo', 'contactPerson', 'inTime', 'outTime', 'officeLocation', 'purpose', 'scheduledTime',\r\n    'status', 'visitNumber'\r\n  ];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.visitSummary = this.data.visitSummary || [];\r\n    this.dataSource = new MatTableDataSource(this.visitSummary);\r\n  }\r\n\r\n}\r\n","module.exports = \".example-card {\\r\\n    max-width: 400px;\\r\\n  }\\r\\n  \\r\\n  .example-header-image {\\r\\n    background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\\r\\n    background-size: cover;\\r\\n  }\\r\\n  \\r\\n  .padding5 {\\r\\n      padding: 5px;\\r\\n  }\\r\\n  \\r\\n  .width150 {\\r\\n      width: 150px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9yZXBvcnQvY29tcG9uZW50cy92aXNpdG9yLXByb2ZpbGUvdmlzaXRvci1wcm9maWxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSxtRkFBbUY7SUFDbkYsc0JBQXNCO0VBQ3hCOztFQUVBO01BQ0ksWUFBWTtFQUNoQjs7RUFFQTtNQUNJLFlBQVk7RUFDaEIiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL3JlcG9ydC9jb21wb25lbnRzL3Zpc2l0b3ItcHJvZmlsZS92aXNpdG9yLXByb2ZpbGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWNhcmQge1xyXG4gICAgbWF4LXdpZHRoOiA0MDBweDtcclxuICB9XHJcbiAgXHJcbiAgLmV4YW1wbGUtaGVhZGVyLWltYWdlIHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly9tYXRlcmlhbC5hbmd1bGFyLmlvL2Fzc2V0cy9pbWcvZXhhbXBsZXMvc2hpYmExLmpwZycpO1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICB9XHJcbiAgXHJcbiAgLnBhZGRpbmc1IHtcclxuICAgICAgcGFkZGluZzogNXB4O1xyXG4gIH1cclxuXHJcbiAgLndpZHRoMTUwIHtcclxuICAgICAgd2lkdGg6IDE1MHB4O1xyXG4gIH0iXX0= */\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-visitor-profile',\r\n  templateUrl: './visitor-profile.component.html',\r\n  styleUrls: ['./visitor-profile.component.css']\r\n})\r\nexport class VisitorProfileComponent implements OnInit {\r\n  @Input() data: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcmVwb3J0L2NvbXBvbmVudHMvdmlzaXRvci92aXNpdG9yLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-visitor',\r\n  templateUrl: './visitor.component.html',\r\n  styleUrls: ['./visitor.component.css']\r\n})\r\nexport class VisitorComponent implements OnInit {\r\n  dialogData: any;\r\n\r\n  constructor(public dialogRef: MatDialogRef<VisitorComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit() {\r\n    this.dialogData = this.data;\r\n  }\r\n\r\n  onClickClose() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\ntable tr[mat-row]:hover {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.filter {\\r\\n  display: block;\\r\\n  width: auto;\\r\\n  width: 100px;\\r\\n}\\r\\n\\r\\n.header {\\r\\n  padding: 5px;\\r\\n}\\r\\n\\r\\n.first-header-row th {\\r\\n  border-bottom: none;\\r\\n}\\r\\n\\r\\n.report-loading-shade {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  bottom: 56px;\\r\\n  right: 0;\\r\\n  background: rgba(0, 0, 0, 0.15);\\r\\n  z-index: 1;\\r\\n  display: -webkit-box;\\r\\n  display: flex;\\r\\n  -webkit-box-align: center;\\r\\n          align-items: center;\\r\\n  -webkit-box-pack: center;\\r\\n          justify-content: center;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9yZXBvcnQvcmVwb3J0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUNBO0VBQ0UsY0FBYztFQUNkLFdBQVc7RUFDWCxZQUFZO0FBQ2Q7O0FBQ0E7RUFDRSxZQUFZO0FBQ2Q7O0FBQ0E7RUFDRSxtQkFBbUI7QUFDckI7O0FBQ0E7RUFDRSxrQkFBa0I7RUFDbEIsTUFBTTtFQUNOLE9BQU87RUFDUCxZQUFZO0VBQ1osUUFBUTtFQUNSLCtCQUErQjtFQUMvQixVQUFVO0VBQ1Ysb0JBQWE7RUFBYixhQUFhO0VBQ2IseUJBQW1CO1VBQW5CLG1CQUFtQjtFQUNuQix3QkFBdUI7VUFBdkIsdUJBQXVCO0FBQ3pCIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9yZXBvcnQvcmVwb3J0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbnRhYmxlIHRyW21hdC1yb3ddOmhvdmVyIHtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuLmZpbHRlciB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgd2lkdGg6IGF1dG87XHJcbiAgd2lkdGg6IDEwMHB4O1xyXG59XHJcbi5oZWFkZXIge1xyXG4gIHBhZGRpbmc6IDVweDtcclxufVxyXG4uZmlyc3QtaGVhZGVyLXJvdyB0aCB7XHJcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcclxufVxyXG4ucmVwb3J0LWxvYWRpbmctc2hhZGUge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDA7XHJcbiAgbGVmdDogMDtcclxuICBib3R0b206IDU2cHg7XHJcbiAgcmlnaHQ6IDA7XHJcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjE1KTtcclxuICB6LWluZGV4OiAxO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG4iXX0= */\"","import { Component, ViewChild, Input, AfterViewInit } from '@angular/core';\r\nimport { VisitorService } from 'src/app/services/visitor.service';\r\nimport { MatPaginator, MatTableDataSource, MatSort, MatDialogConfig, MatDialog } from '@angular/material';\r\nimport { VisitorComponent } from './components/visitor/visitor.component';\r\nimport { FormControl } from '@angular/forms';\r\nimport { merge, of as observableOf } from 'rxjs';\r\nimport { startWith, switchMap, map, catchError, debounceTime } from 'rxjs/operators';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component( {\r\n  selector: 'app-report',\r\n  styleUrls: [ 'report.component.css' ],\r\n  templateUrl: 'report.component.html'\r\n} )\r\n\r\nexport class ReportComponent implements AfterViewInit {\r\n  visitors: any;\r\n  isLoadingResults = true;\r\n  resultsLength = 0;\r\n  pageSize = 10;\r\n\r\n  @ViewChild( MatPaginator, { static: true } ) paginator: MatPaginator;\r\n  @ViewChild( MatSort, { static: true } ) sort: MatSort;\r\n  @Input() dataSource: MatTableDataSource<any>;\r\n\r\n  firstNameFilter = new FormControl( '' );\r\n  lastNameFilter = new FormControl( '' );\r\n  //phoneNumberFilter = new FormControl( '' );\r\n  purposeFilter = new FormControl( '' );\r\n  contactPersonFilter = new FormControl( '' );\r\n  inTimeFilter = new FormControl( '' );\r\n  idTypeFilter = new FormControl( '' );\r\n  filterValues = {};\r\n\r\n  displayedColumns = [\r\n    'firstName', 'lastName', 'phoneNumber', 'purpose',\r\n    'contactPerson', 'inTime', 'idType', 'idNumber'\r\n  ];\r\n\r\n  displayedSearchBoxes = [\r\n    'firstName-search', 'lastName-search', 'purpose-search',\r\n    'contactPerson-search', 'inTime-search', 'idType-search'\r\n  ]; //'phoneNumber-search',\r\n\r\n  constructor( private visitorService: VisitorService,\r\n    private dialog: MatDialog,\r\n    private route: ActivatedRoute ) { }\r\n\r\n  ngAfterViewInit() {\r\n    this.route.queryParams.subscribe( params => {\r\n      this.filterValues[ 'officeLocation' ] = params.loc;\r\n      this.paginator.pageIndex = 0;\r\n    } );\r\n\r\n    this.firstNameFilter.valueChanges.subscribe(\r\n      firstName => {\r\n        this.filterValues[ 'firstName' ] = firstName;\r\n        this.paginator.pageIndex = 0;\r\n      }\r\n    );\r\n    this.lastNameFilter.valueChanges.subscribe(\r\n      lastName => {\r\n        this.filterValues[ 'lastName' ] = lastName;\r\n        this.paginator.pageIndex = 0;\r\n      }\r\n    );\r\n    /* this.phoneNumberFilter.valueChanges.subscribe(\r\n      phoneNumber => {\r\n        this.filterValues.phoneNumber = phoneNumber;\r\n        this.paginator.pageIndex = 0;\r\n      }\r\n    ); */\r\n    this.purposeFilter.valueChanges.subscribe(\r\n      purpose => {\r\n        this.filterValues[ 'purpose' ] = purpose;\r\n        this.paginator.pageIndex = 0;\r\n      }\r\n    );\r\n    this.contactPersonFilter.valueChanges.subscribe(\r\n      contactPerson => {\r\n        this.filterValues[ 'contactPerson' ] = contactPerson;\r\n        this.paginator.pageIndex = 0;\r\n      }\r\n    );\r\n    this.inTimeFilter.valueChanges.subscribe(\r\n      inTime => {\r\n        this.filterValues[ 'inTime' ] = inTime;\r\n        this.paginator.pageIndex = 0;\r\n      }\r\n    );\r\n    this.idTypeFilter.valueChanges.subscribe(\r\n      idType => {\r\n        this.filterValues[ 'idType' ] = idType;\r\n        this.paginator.pageIndex = 0;\r\n      }\r\n    );\r\n    merge( this.firstNameFilter.valueChanges,\r\n      this.lastNameFilter.valueChanges,\r\n      // this.phoneNumberFilter.valueChanges,\r\n      this.purposeFilter.valueChanges,\r\n      this.contactPersonFilter.valueChanges,\r\n      this.inTimeFilter.valueChanges,\r\n      this.idTypeFilter.valueChanges,\r\n      this.route.queryParams,\r\n      this.paginator.page )\r\n      .pipe(\r\n        startWith( {} ),\r\n        switchMap( () => {\r\n          this.isLoadingResults = true;\r\n          return this.visitorService.searchVisitor( this.filterValues, this.paginator.pageIndex, this.paginator.pageSize );\r\n        } ),\r\n        map( data => {\r\n          // Flip flag to show that loading has finished.\r\n          this.resultsLength = data[ 'total' ];\r\n          return data;\r\n        } ),\r\n        catchError( () => {\r\n          this.isLoadingResults = false;\r\n          return observableOf( [] );\r\n        } ),\r\n      ).subscribe( data => {\r\n        this.visitors = data[ 'data' ] ? data[ 'data' ] : [];\r\n        this.dataSource = new MatTableDataSource( this.visitors );\r\n        this.isLoadingResults = false;\r\n        this.dataSource.sort = this.sort;\r\n      } );\r\n  }\r\n  openDialog( row ) {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.data = row;\r\n    dialogConfig.height = '600px';\r\n    dialogConfig.width = '1000px';\r\n\r\n    const matDialogRef = this.dialog.open( VisitorComponent, dialogConfig );\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { MaterialModule } from '../material.module';\r\nimport { ReportComponent } from './report.component';\r\nimport { VisitorComponent } from './components/visitor/visitor.component';\r\nimport { VisitorProfileComponent } from './components/visitor-profile/visitor-profile.component';\r\nimport { VisitSummaryComponent } from './components/visit-summary/visit-summary.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule( {\r\n  imports: [\r\n    MaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  exports: [ ReportComponent ],\r\n  declarations: [\r\n    ReportComponent,\r\n    VisitorComponent,\r\n    VisitorProfileComponent,\r\n    VisitSummaryComponent\r\n  ],\r\n  entryComponents: [ VisitorComponent ]\r\n} )\r\nexport class ReportModule { }\r\n","module.exports = \".visitorInput {\\r\\n width:31%;\\r\\n margin-left:-1%;\\r\\n}\\r\\n\\r\\n.full-width{\\r\\n  width: 90%;\\r\\n}\\r\\n\\r\\n.button-size\\r\\n{\\r\\n  width: 20px;\\r\\n  height:50px;\\r\\n}\\r\\n\\r\\n.table-div{\\r\\n  margin-top: 40px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy92aXNpdG9yLWZvcm0vdmlzaXRvci1mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxTQUFTO0NBQ1QsZUFBZTtBQUNoQjs7QUFFQTtFQUNFLFVBQVU7QUFDWjs7QUFFQTs7RUFFRSxXQUFXO0VBQ1gsV0FBVztBQUNiOztBQUNBO0VBQ0UsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy92aXNpdG9yLWZvcm0vdmlzaXRvci1mb3JtLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudmlzaXRvcklucHV0IHtcclxuIHdpZHRoOjMxJTtcclxuIG1hcmdpbi1sZWZ0Oi0xJTtcclxufVxyXG5cclxuLmZ1bGwtd2lkdGh7XHJcbiAgd2lkdGg6IDkwJTtcclxufVxyXG5cclxuLmJ1dHRvbi1zaXplXHJcbntcclxuICB3aWR0aDogMjBweDtcclxuICBoZWlnaHQ6NTBweDtcclxufVxyXG4udGFibGUtZGl2e1xyXG4gIG1hcmdpbi10b3A6IDQwcHg7XHJcbn1cclxuIl19 */\"","import { VisitorService } from \"src/app/services/visitor.service\";\r\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Component } from \"@angular/core\";\r\n\r\n@Component( {\r\n  selector: \"app-visitor-form\",\r\n  templateUrl: \"./visitor-form.component.html\",\r\n  styleUrls: [ \"./visitor-form.component.css\" ]\r\n} )\r\nexport class VisitorFormComponent {\r\n  constructor( public service: VisitorService, private http: HttpClient ) { }\r\n  visitorType = [ \"Guest\", \"Employee\" ];\r\n\r\n  ids = [ \"Voter Id\", \"PAN\", \"Adhaar\" ];\r\n  now;\r\n  purposes = [\r\n    { id: 1, value: \"Interviewing\" },\r\n    { id: 2, value: \"Meeting\" },\r\n    { id: 3, value: \"New Joinee\" }\r\n  ];\r\n  mobnumPattern = \"^((\\\\+91-?)|0)?[0-9]{10}$\";\r\n\r\n  form: FormGroup = new FormGroup( {\r\n    firstName: new FormControl( \"\", Validators.required ),\r\n    lastName: new FormControl( \"\", Validators.required ),\r\n    employeeId: new FormControl( \"\", Validators.required ),\r\n    inTime: new FormControl(),\r\n    contactPerson: new FormControl( \"\" ),\r\n    emailId: new FormControl( \"\", Validators.email ),\r\n    phoneNumber: new FormControl( \"\", [\r\n      Validators.required,\r\n      Validators.pattern( this.mobnumPattern )\r\n    ] ),\r\n    comingFrom: new FormControl( \"\" ),\r\n    idType: new FormControl( \"\" ),\r\n    purpose: new FormControl( \"\" ),\r\n    idNumber: new FormControl( \"\" ),\r\n    officeLocation: new FormControl( \"\" ),\r\n    visitorType: new FormControl( \"\" )\r\n  } );\r\n\r\n  initializeFormGroup() {\r\n    this.form.setValue( {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      emailId: \"\",\r\n      idType: \"\",\r\n      contactPerson: \"\",\r\n      phoneNumber: \"\",\r\n      comingFrom: \"\",\r\n      purpose: \"\",\r\n      inTime: \"\",\r\n      idNumber: \"\",\r\n      officeLocation: \"\",\r\n      visitorType: \"\",\r\n      employeeId: \"\"\r\n    } );\r\n  }\r\n\r\n  ngDoCheck(): void {\r\n    setTimeout( () => {\r\n      this.now = new Date();\r\n    }, 2000 );\r\n  }\r\n\r\n  onClear() {\r\n    this.form.reset();\r\n    this.initializeFormGroup();\r\n  }\r\n  onSubmit() {\r\n    this.service.createNewVisitor( this.form.value ).subscribe( val => {\r\n      console.log( val );\r\n    } );\r\n    this.form.reset();\r\n    this.initializeFormGroup();\r\n  }\r\n  onSubmitEmployeeData() {\r\n    this.service.createNewVisitor( this.form.value ).subscribe( val => {\r\n      console.log( val );\r\n    } );\r\n    this.form.reset();\r\n  }\r\n\r\n  ngOnInit() { }\r\n}\r\n","module.exports = \"\\r\\n.span{\\r\\n    display: inline-block\\r\\n}\\r\\n.span-maticon{\\r\\n    vertical-align: bottom\\r\\n}\\r\\n.example-container {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n            flex-direction: column;\\r\\n  }\\r\\n.example-container > mat-form-field{\\r\\n    display: block;\\r\\n    width:23rem;\\r\\n  }\\r\\nh2.setMiddle{\\r\\n    padding-left: 10rem; \\r\\n  }\\r\\ndiv.flex-container-wrapper{\\r\\n    padding: 1rem;\\r\\n  }\\r\\ndiv.flex-container-wrapper >  div.flex-container{\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n  }\\r\\ndiv.flex-container-wrapper >  div.flex-container > mat-form-field{\\r\\n    -webkit-box-flex:1;\\r\\n            flex:1;\\r\\n    padding-right: 2rem;\\r\\n  }\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy92aXNpdG9yLWZvcm0vdmlzaXRvci1ob21lL3Zpc2l0b3ItaG9tZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtJQUNJO0FBQ0o7QUFDQTtJQUNJO0FBQ0o7QUFFQTtJQUNJLG9CQUFhO0lBQWIsYUFBYTtJQUNiLDRCQUFzQjtJQUF0Qiw2QkFBc0I7WUFBdEIsc0JBQXNCO0VBQ3hCO0FBRUE7SUFDRSxjQUFjO0lBQ2QsV0FBVztFQUNiO0FBRUE7SUFDRSxtQkFBbUI7RUFDckI7QUFFQTtJQUNFLGFBQWE7RUFDZjtBQUVBO0lBQ0Usb0JBQWE7SUFBYixhQUFhO0VBQ2Y7QUFFQTtJQUNFLGtCQUFNO1lBQU4sTUFBTTtJQUNOLG1CQUFtQjtFQUNyQiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdmlzaXRvci1mb3JtL3Zpc2l0b3ItaG9tZS92aXNpdG9yLWhvbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4uc3BhbntcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9ja1xyXG59XHJcbi5zcGFuLW1hdGljb257XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tXHJcbn1cclxuXHJcbi5leGFtcGxlLWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICB9XHJcbiAgXHJcbiAgLmV4YW1wbGUtY29udGFpbmVyID4gbWF0LWZvcm0tZmllbGR7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHdpZHRoOjIzcmVtO1xyXG4gIH1cclxuICBcclxuICBoMi5zZXRNaWRkbGV7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDEwcmVtOyBcclxuICB9XHJcblxyXG4gIGRpdi5mbGV4LWNvbnRhaW5lci13cmFwcGVye1xyXG4gICAgcGFkZGluZzogMXJlbTtcclxuICB9XHJcblxyXG4gIGRpdi5mbGV4LWNvbnRhaW5lci13cmFwcGVyID4gIGRpdi5mbGV4LWNvbnRhaW5lcntcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgfVxyXG5cclxuICBkaXYuZmxleC1jb250YWluZXItd3JhcHBlciA+ICBkaXYuZmxleC1jb250YWluZXIgPiBtYXQtZm9ybS1maWVsZHtcclxuICAgIGZsZXg6MTtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDJyZW07XHJcbiAgfVxyXG4iXX0= */\"","import { Component } from '@angular/core';\r\n\r\n@Component( {\r\n  selector: 'visitor-home',\r\n  templateUrl: 'visitor-home.component.html',\r\n  styleUrls: [ 'visitor-home.component.css' ],\r\n} )\r\nexport class VisitorComponent {\r\n\r\n\r\n  constructor() { }\r\n\r\n}","module.exports = \"\\r\\n.span{\\r\\n  display: inline-block\\r\\n}\\r\\n.span-maticon{\\r\\n  vertical-align: bottom\\r\\n}\\r\\n.example-container {\\r\\n  display: -webkit-box;\\r\\n  display: flex;\\r\\n  -webkit-box-orient: vertical;\\r\\n  -webkit-box-direction: normal;\\r\\n          flex-direction: column;\\r\\n}\\r\\n.example-container > mat-form-field{\\r\\n  display: block;\\r\\n  width:23rem;\\r\\n}\\r\\nh2.setMiddle{\\r\\n  padding-left: 10rem; \\r\\n}\\r\\ndiv.flex-container-wrapper{\\r\\n  padding: 1rem;\\r\\n}\\r\\ndiv.flex-container-wrapper >  div.flex-container{\\r\\n  display: -webkit-box;\\r\\n  display: flex;\\r\\n}\\r\\ndiv.flex-container-wrapper >  div.flex-container > mat-form-field{\\r\\n  -webkit-box-flex:1;\\r\\n          flex:1;\\r\\n  padding-right: 2rem;\\r\\n}\\r\\n.list {\\r\\n  display: block;\\r\\n  padding: 1rem;\\r\\n}\\r\\n.completed, .approved{\\r\\n  color: #155724;\\r\\n  background-color: #d4edda;\\r\\n  border-color: #c3e6cb;\\r\\n  border-left: 5px solid #155724;\\r\\n}\\r\\n.declined,.cancelled,.failed{\\r\\n  color: #721c24;\\r\\n  background-color: #f8d7da;\\r\\n  border-color: #f5c6cb;\\r\\n  border-left: 5px solid #721c24;\\r\\n}\\r\\n.scheduled,.new{\\r\\n  color: #0c5460;\\r\\n  background-color: #d1ecf1;\\r\\n  border-color: #bee5eb;\\r\\n  border-left: 5px solid #0c5460;\\r\\n}\\r\\n.pending{\\r\\n  color: #856404;\\r\\n  background-color: #fff3cd;\\r\\n  border-color: #ffeeba;\\r\\n  border-left: 5px solid #856404;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy92aXNpdG9yLWZvcm0vdmlzaXRvci1zZWFyY2gtb3ItY3JlYXRlL3Zpc2l0b3Itc2VhcmNoLW9yLWNyZWF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtFQUNFO0FBQ0Y7QUFDQTtFQUNFO0FBQ0Y7QUFFQTtFQUNFLG9CQUFhO0VBQWIsYUFBYTtFQUNiLDRCQUFzQjtFQUF0Qiw2QkFBc0I7VUFBdEIsc0JBQXNCO0FBQ3hCO0FBRUE7RUFDRSxjQUFjO0VBQ2QsV0FBVztBQUNiO0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7QUFFQTtFQUNFLGFBQWE7QUFDZjtBQUVBO0VBQ0Usb0JBQWE7RUFBYixhQUFhO0FBQ2Y7QUFFQTtFQUNFLGtCQUFNO1VBQU4sTUFBTTtFQUNOLG1CQUFtQjtBQUNyQjtBQUVBO0VBQ0UsY0FBYztFQUNkLGFBQWE7QUFDZjtBQUdBO0VBQ0UsY0FBYztFQUNkLHlCQUF5QjtFQUN6QixxQkFBcUI7RUFDckIsOEJBQThCO0FBQ2hDO0FBRUE7RUFDRSxjQUFjO0VBQ2QseUJBQXlCO0VBQ3pCLHFCQUFxQjtFQUNyQiw4QkFBOEI7QUFDaEM7QUFFQTtFQUNFLGNBQWM7RUFDZCx5QkFBeUI7RUFDekIscUJBQXFCO0VBQ3JCLDhCQUE4QjtBQUNoQztBQUVBO0VBQ0UsY0FBYztFQUNkLHlCQUF5QjtFQUN6QixxQkFBcUI7RUFDckIsOEJBQThCO0FBQ2hDIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy92aXNpdG9yLWZvcm0vdmlzaXRvci1zZWFyY2gtb3ItY3JlYXRlL3Zpc2l0b3Itc2VhcmNoLW9yLWNyZWF0ZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi5zcGFue1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9ja1xyXG59XHJcbi5zcGFuLW1hdGljb257XHJcbiAgdmVydGljYWwtYWxpZ246IGJvdHRvbVxyXG59XHJcblxyXG4uZXhhbXBsZS1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxufVxyXG5cclxuLmV4YW1wbGUtY29udGFpbmVyID4gbWF0LWZvcm0tZmllbGR7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgd2lkdGg6MjNyZW07XHJcbn1cclxuXHJcbmgyLnNldE1pZGRsZXtcclxuICBwYWRkaW5nLWxlZnQ6IDEwcmVtOyBcclxufVxyXG5cclxuZGl2LmZsZXgtY29udGFpbmVyLXdyYXBwZXJ7XHJcbiAgcGFkZGluZzogMXJlbTtcclxufVxyXG5cclxuZGl2LmZsZXgtY29udGFpbmVyLXdyYXBwZXIgPiAgZGl2LmZsZXgtY29udGFpbmVye1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbn1cclxuXHJcbmRpdi5mbGV4LWNvbnRhaW5lci13cmFwcGVyID4gIGRpdi5mbGV4LWNvbnRhaW5lciA+IG1hdC1mb3JtLWZpZWxke1xyXG4gIGZsZXg6MTtcclxuICBwYWRkaW5nLXJpZ2h0OiAycmVtO1xyXG59XHJcblxyXG4ubGlzdCB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgcGFkZGluZzogMXJlbTtcclxufVxyXG5cclxuXHJcbi5jb21wbGV0ZWQsIC5hcHByb3ZlZHtcclxuICBjb2xvcjogIzE1NTcyNDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDRlZGRhO1xyXG4gIGJvcmRlci1jb2xvcjogI2MzZTZjYjtcclxuICBib3JkZXItbGVmdDogNXB4IHNvbGlkICMxNTU3MjQ7XHJcbn1cclxuXHJcbi5kZWNsaW5lZCwuY2FuY2VsbGVkLC5mYWlsZWR7XHJcbiAgY29sb3I6ICM3MjFjMjQ7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZDdkYTtcclxuICBib3JkZXItY29sb3I6ICNmNWM2Y2I7XHJcbiAgYm9yZGVyLWxlZnQ6IDVweCBzb2xpZCAjNzIxYzI0O1xyXG59XHJcblxyXG4uc2NoZWR1bGVkLC5uZXd7XHJcbiAgY29sb3I6ICMwYzU0NjA7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2QxZWNmMTtcclxuICBib3JkZXItY29sb3I6ICNiZWU1ZWI7XHJcbiAgYm9yZGVyLWxlZnQ6IDVweCBzb2xpZCAjMGM1NDYwO1xyXG59XHJcblxyXG4ucGVuZGluZ3tcclxuICBjb2xvcjogIzg1NjQwNDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmM2NkO1xyXG4gIGJvcmRlci1jb2xvcjogI2ZmZWViYTtcclxuICBib3JkZXItbGVmdDogNXB4IHNvbGlkICM4NTY0MDQ7XHJcbn1cclxuXHJcblxyXG4iXX0= */\"","import { Component, ViewChild } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, switchMap, distinctUntilChanged, filter } from 'rxjs/operators';\r\nimport { idType } from 'src/app/helpers/static-data';\r\nimport { VisitorModel } from 'src/app/helpers/models/visitors/visitors.model';\r\nimport { VisitorService } from 'src/app/services/visitor.service';\r\nimport { VisitSummaryModel } from 'src/app/helpers/models/visitors/visit-summary.model';\r\nimport { NgForm, FormControl } from '@angular/forms';\r\nimport { MatStep } from '@angular/material';\r\nimport { Router } from '@angular/router';\r\n@Component( {\r\n  selector: 'visitor-search-or-create',\r\n  templateUrl: 'visitor-search-or-create.component.html',\r\n  styleUrls: [ 'visitor-search-or-create.component.css' ],\r\n} )\r\nexport class VisitorSearchOrCreateComponent {\r\n  search$: Subject<string> = new Subject<string>();\r\n  user: VisitorModel;\r\n  data: any;\r\n  search: string;\r\n  model: { [ propName: string ]: any } = {}\r\n  idTypes: Array<string> = idType;\r\n  lastKeyPress: number = 0;\r\n  @ViewChild( 'heroForm', { static: true } )\r\n  heroForm: NgForm;\r\n\r\n  @ViewChild( 'step', { static: true } )\r\n  step: MatStep\r\n\r\n\r\n  constructor( private visitorService: VisitorService, private router: Router ) {\r\n    this.createUser();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.search$.pipe(\r\n      debounceTime( 1000 ),\r\n      distinctUntilChanged(),\r\n      filter( ( data ) => data != '' ),\r\n      switchMap( ( data ) => this.visitorService.getVisitorByEmailId( data ) )\r\n    ).subscribe( ( data ) => {\r\n      this.data = data;\r\n      if ( data ) {\r\n        this.user = new VisitorModel( data );\r\n      } else {\r\n        this.createUser();\r\n        this.user.emailId = this.search\r\n      }\r\n    } )\r\n  }\r\n\r\n  createUser() {\r\n    this.user = new VisitorModel();\r\n    this.user.visitSummary = [];\r\n    this.user.visitSummary.push( new VisitSummaryModel() );\r\n  }\r\n\r\n  searchValues( value: string, type: string ) {\r\n    this.search = value;\r\n    let regex = type === 'phoneNumber' ? `[0-9]+` : `[^@]+@[^\\.]+\\..+`;\r\n    let data = value.match( regex )\r\n    if ( type === 'email' && data ) {\r\n      this.search$.next( value );\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    this.visitorService.createNewVisitor( this.user ).subscribe( () => {\r\n      this.createUser();\r\n      this.router.navigateByUrl( '/visitor' );\r\n    } )\r\n  }\r\n}","import { NgModule, Component } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { MaterialModule } from \"../material.module\";\r\nimport { VisitorFormComponent } from \"./visitor-form.component\";\r\nimport { VisitorComponent } from \"./visitor-home/visitor-home.component\";\r\nimport { HomeModule } from \"../home/home.module\";\r\nimport { VisitorSearchOrCreateComponent } from './visitor-search-or-create/visitor-search-or-create.component';\r\n\r\n@NgModule( {\r\n  declarations: [ VisitorFormComponent, VisitorComponent, VisitorSearchOrCreateComponent ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    HomeModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule\r\n  ],\r\n  exports: [ VisitorFormComponent, VisitorComponent, VisitorSearchOrCreateComponent ]\r\n} )\r\nexport class VisitorsModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n\r\n@Injectable( {\r\n  providedIn: 'root'\r\n} )\r\n\r\nexport class AuthService {\r\n  subject$ = new BehaviorSubject<boolean>( false )\r\n\r\n}","/**\r\n * @author M.Shashikant(shashikant.mittapelli@accoliteindia.com)\r\n * Common Rest Service for all Http calls\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { Observer, Observable } from 'rxjs';\r\nimport { accoliteSnackbarMessages } from '../../helpers/static-data';\r\nimport { SnackbarComponent } from 'src/app/components/ui-components/snack-bar/snack-bar.component';\r\n\r\n@Injectable( {\r\n  providedIn: 'root'\r\n} )\r\n\r\nexport class RestService {\r\n\r\n  constructor( private http: HttpClient, private snackbarService: MatSnackBar ) { }\r\n\r\n  get( url: string, options: { params?: HttpParams, headers?: HttpHeaders } = {} ) {\r\n    return this.http.get( url, options )\r\n  }\r\n\r\n  jsonPost( url: string, body?: any, options: { params?: HttpParams, headers?: HttpHeaders } = {} ) {\r\n    return this.http.post( url, body, options )\r\n  }\r\n\r\n  jsonPut( url: string, body?: any, options: { params?: HttpParams, headers?: HttpHeaders } = {} ) {\r\n    return this.http.put( url, body, options )\r\n  }\r\n\r\n  delete( url: string, options: { params?: HttpParams, headers?: HttpHeaders } = {} ) {\r\n    return this.http.delete( url, options )\r\n  }\r\n\r\n  createSnackbar( message: string, action: string = \"close\", durationMS: number = 2000, cssClass: string, icon?: string ) {\r\n    this.snackbarService.openFromComponent( SnackbarComponent, {\r\n      data: {\r\n        message: message,\r\n        icon: icon ? icon : 'info',\r\n        action: action,\r\n        class: cssClass\r\n      },\r\n      duration: durationMS,\r\n      verticalPosition: 'top',\r\n      horizontalPosition: 'right'\r\n    } )\r\n  }\r\n\r\n  createNotifySnackbar( key: string, action: string = \"close\", durationMS: number = 2000 ) {\r\n    let message = ( key ) => ( accoliteSnackbarMessages[ 'rest' ] )[ key ];\r\n    let observer: Observer<any> = {\r\n      next: ( data ) => {\r\n        this.createSnackbar( message( 'success' )[ key ], action, durationMS, \"success\" )\r\n      }, error: ( error ) => {\r\n        this.createSnackbar( message( 'error' )[ key ], action, durationMS, \"error\" )\r\n      }, complete: () => {\r\n      }\r\n    }\r\n    return observer\r\n  }\r\n\r\n  catchError( obs: Observable<any> ) {\r\n    obs.subscribe( ( error ) => {\r\n      console.warn( error )\r\n    } )\r\n  }\r\n\r\n}","import { HttpParams, HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { tap, catchError } from \"rxjs/operators\";\r\nimport { urls } from \"../../config/constants\";\r\nimport { RestService } from \"./base/rest.service\";\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable( {\r\n  providedIn: \"root\"\r\n} )\r\nexport class VisitorService {\r\n  constructor( private restService: RestService ) { }\r\n\r\n  getVisitorByEmailId( emailId: string ) {\r\n    return this.restService.get( urls.BASE_URL + urls.GET_VISITOR_BY_EMAIL + emailId ).pipe( catchError( ( err ) => {\r\n      console.log( err );\r\n      return of( null )\r\n    } ) );\r\n  }\r\n\r\n  createNewVisitor( visitorObj: any ) {\r\n    return this.restService\r\n      .jsonPost( urls.BASE_URL + urls.CREATE_NEW_VISITOR, visitorObj )\r\n      .pipe( tap( this.restService.createNotifySnackbar( 'create-visitors' ) ) )\r\n  }\r\n\r\n  addVisitorSummary( visitorId: string, visitorSummaryObj: any ) {\r\n    return this.restService.jsonPost( urls.BASE_URL + urls.ADD_VISIT_SUMMARY + visitorId, visitorSummaryObj );\r\n  }\r\n\r\n  updateVisitorDetails( visitorId: string, visitorObj: any ) {\r\n    return this.restService.jsonPost( urls.BASE_URL + urls.UPDATE_VISITOR_DETAILS + visitorId, visitorObj );\r\n  }\r\n\r\n  updateVisitSummary( visitorId: string, visitSummaryObj: any ) {\r\n    return this.restService.jsonPut( urls.BASE_URL + urls.UPDATE_VISITOR_SUMMARY + visitorId, visitSummaryObj );\r\n  }\r\n\r\n  sendApprovalMail( reqObj: any ) {\r\n    return this.restService.jsonPost( urls.BASE_URL + urls.SEND_APPROVAL_MAIL, reqObj );\r\n  }\r\n\r\n  sendNotifyMail( reqObj: any ) {\r\n    return this.restService.jsonPost( urls.BASE_URL + urls.SEND_NOTIFY_MAIL, reqObj );\r\n  }\r\n\r\n  fetchAllVisitors() {\r\n    return this.restService.get( urls.BASE_URL );\r\n  }\r\n\r\n  fetchVisitorsByInTime( startDate: string, endDate: string ) {\r\n    let params = new HttpParams();\r\n    params.set( \"startDate\", startDate );\r\n    params.set( \"endDate\", endDate );\r\n    return this.restService.get( urls.BASE_URL + urls.GET_VISITORS_BY_IN_TIME, {\r\n      params: params\r\n    } );\r\n  }\r\n\r\n  updateExitTime( visitorId: string, visitNumber: number, remarks: string ) {\r\n    const reqObj = {\r\n      visitNumber: visitNumber,\r\n      remarks: remarks\r\n    };\r\n    return this.restService.jsonPut( urls.BASE_URL + urls.EXIT_TIME + visitorId, reqObj );\r\n  }\r\n\r\n  fetchVisitor( id: string ) {\r\n    return this.restService.get( urls.BASE_URL + id );\r\n  }\r\n\r\n  searchVisitor( searchObj: any, page: number = 0, pageSize: number = 10 ) {\r\n    let searchURL = urls.BASE_URL + urls.SEARCH + `?page=${ page }&size=${ pageSize }`;\r\n    return this.restService.jsonPost( searchURL, searchObj );\r\n  }\r\n\r\n  deleteVisitorSummary( visitSummaryId: string ) {\r\n    return this.restService.get( urls.BASE_URL + visitSummaryId );\r\n  }\r\n\r\n}\r\n","export const urls = {\r\n    'BASE_URL': 'http://13.233.40.37:8081/api-dev/visitor/',\r\n    'LOCAL_BASE_URL': 'http://localhost:8081/api/visitor/',\r\n    'DEV_BASE_URL': 'http://13.233.40.37:8081/api-dev/visitor/',\r\n    'PROD_BASE_URL': 'http://13.233.40.37:8081/visitors/api/visitor/',\r\n    'CREATE_NEW_VISITOR': 'create/',\r\n    'EXIT_TIME': 'exit/',\r\n    'GET_VISITORS_BY_IN_TIME': 'getVisitorsByInTime/',\r\n    'SEARCH': 'search',\r\n    'GET_VISITOR_BY_EMAIL': 'email/',\r\n    'ADD_VISIT_SUMMARY': 'addVisitSummary/',\r\n    'UPDATE_VISITOR_DETAILS': 'updateVisitorDetails/',\r\n    'UPDATE_VISITOR_SUMMARY': 'updateVisitSummary/',\r\n    'SEND_APPROVAL_MAIL': 'sendApprovalMail/',\r\n    'SEND_NOTIFY_MAIL': 'sendNotifyMail/',\r\n};\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}